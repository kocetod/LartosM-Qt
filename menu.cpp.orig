#include "menu.h"
#include "ui_menu.h"

#include "bg.h"
#include "en.h"
#include "variables.h"

#include "saveuserdata.h"
#include <QKeyEvent>
#include <QVariant>
#include <QTableView>
#include <QTreeView>
#include <QDesktopWidget>
#include <QStandardItemModel>
#include <QSortFilterProxyModel>
#include "pointobj.h"



Menu::Menu(QWidget *parent) :
<<<<<<< working copy
    QDialog(parent),
    ui(new Ui::Menu)
{
    ui->setupUi(this);

    this->setWindowFlags(Qt::FramelessWindowHint);

    //QCursor cursor(Qt::BlankCursor);
    //QApplication::setOverrideCursor(cursor);
    //QApplication::changeOverrideCursor(cursor);

    setAttribute(Qt::WA_AcceptTouchEvents, true);

    ui->manufacturingBox->setGeometry(10, 10, 1260, 781);
    ui->manufacturingBox->hide();
    ui->btnChooseLang->setEnabled(false);
    ui->timeEdit->setTime(QTime::currentTime());
    ui->manufacturing->hide();

    ui->keyboard->hide();
    ui->btnReset->hide();
    ui->wrong_reset->hide();

    ui->pan_speed->adjustSize();
    ui->pan_speed->setGeometry((ui->settings->width() - ui->pan_speed->width())/2,
                                 ui->pan_speed->geometry().y(),
                                 ui->pan_speed->width(),
                                 ui->pan_speed->height());

    ui->tilt_speed->adjustSize();
    ui->tilt_speed->setGeometry((ui->settings->width() - ui->tilt_speed->width())/2,
                                 ui->tilt_speed->geometry().y(),
                                 ui->tilt_speed->width(),
                                 ui->tilt_speed->height());

    ui->settings->setCurrentIndex(7);

    QString pos_br = QString::number(ui->brightness->value());
    ui->brightness_lbl->setText("Brightness: ");

    QString pos_c = QString::number(ui->contrast->value());
    ui->contrast_lbl->setText("Contrast: ");

    QString pos_dde = QString::number(ui->dde->value());
    ui->dde_lbl->setText("DDE: ");

    qApp->installEventFilter(this);

    QDate date = QDate::currentDate();
    ui->dateEdit->setDate(date);

    _magnDecl = QString::number(magnDecl);
    if(magnDecl != 0)
=======
  QDialog(parent),
  ui(new Ui::Menu)
{
  ui->setupUi(this);

  this->setWindowFlags(Qt::FramelessWindowHint);

  setAttribute(Qt::WA_AcceptTouchEvents, true);

  ui->manufacturingBox->setGeometry(10, 10, 1260, 781);
  ui->manufacturingBox->hide();
  ui->btnChooseLang->setEnabled(false);
  ui->timeEdit->setTime(QTime::currentTime());
  ui->manufacturing->hide();
  ui->keyboard_qwerty->hide();
  ui->keyboard->hide();
  ui->btnReset->hide();
  ui->wrong_reset->hide();

  ui->lblPT_Speed->adjustSize();
  ui->lblPT_Speed->setGeometry((ui->settings->width() - ui->lblPT_Speed->width())/2,
                               ui->lblPT_Speed->geometry().y(),
                               ui->lblPT_Speed->width(),
                               ui->lblPT_Speed->height());

  ui->settings->setCurrentIndex(7);

  QString pos_br = QString::number(ui->brightness->value());
  ui->brightness_lbl->setText("Brightness: ");

  QString pos_c = QString::number(ui->contrast->value());
  ui->contrast_lbl->setText("Contrast: ");

  QString pos_dde = QString::number(ui->dde->value());
  ui->dde_lbl->setText("DDE: ");

  qApp->installEventFilter(this);

  QDate date = QDate::currentDate();
  ui->dateEdit->setDate(date);

  _magnDecl = QString::number(magnDecl);
  if(magnDecl != 0)
>>>>>>> merge rev
    {
      ui->txtDeclination->setText(_magnDecl);
    }

  capsLock = false;

  Menu::setSmallLetters();
  Menu::initTableView();

  hashPoint = savePointObj->readPointFromFile();

  Menu::loadPointData();
}

Menu::~Menu()
{
  delete ui;
}

void Menu::keyPressEvent(QKeyEvent *event)
{
  if(event->key() == Qt::Key_F6) //ok
    {
<<<<<<< working copy
        gpioBtnOk();
=======
      if(ui->settings->currentIndex() == 7)
        {
          ui->settings->setCurrentIndex(0);
          ui->txtCurrPass->setFocus();
          moveLeft();
          showKeyboard();
          ui->keyboard->show();
        }
      else if(ui->btn_minus->hasFocus())
        {
          on_btn_minus_pressed();
        }
      else if(ui->btn_plus->hasFocus())
        {
          on_btn_plus_pressed();
        }
      else if(ui->k1_magneticDeclination->hasFocus())
        {
          on_k1_magneticDeclination_pressed();
        }
      else if(ui->k2_magneticDeclination->hasFocus())
        {
          on_k2_magneticDeclination_pressed();
        }
      else if(ui->k3_magneticDeclination->hasFocus())
        {
          on_k3_magneticDeclination_pressed();
        }
      else if(ui->k4_magneticDeclination->hasFocus())
        {
          on_k4_magneticDeclination_pressed();
        }
      else if(ui->k5_magneticDeclination->hasFocus())
        {
          on_k5_magneticDeclination_pressed();
        }
      else if(ui->k6_magneticDeclination->hasFocus())
        {
          on_k6_magneticDeclination_pressed();
        }
      else if(ui->k7_magneticDeclination->hasFocus())
        {
          on_k7_magneticDeclination_pressed();
        }
      else if(ui->k8_magneticDeclination->hasFocus())
        {
          on_k8_magneticDeclination_pressed();
        }
      else if(ui->k9_magneticDeclination->hasFocus())
        {
          on_k9_magneticDeclination_pressed();
        }
      else if(ui->k_minus_magneticDeclination->hasFocus())
        {
          on_k_minus_magneticDeclination_pressed();
        }
      else if(ui->k0_magneticDeclination->hasFocus())
        {
          on_k0_magneticDeclination_pressed();
        }
      else if(ui->k_plus_magneticDeclination->hasFocus())
        {
          on_k_plus_magneticDeclination_pressed();
        }
      else if(ui->k_dot_magneticDeclination->hasFocus())
        {
          on_k_dot_magneticDeclination_pressed();
        }
      else if(ui->k_del_magneticDeclination->hasFocus())
        {
          on_k_del_magneticDeclination_pressed();
        }
      else if(ui->wgs->hasFocus())
        {
          ui->wgs->setChecked(true);
        }
      else if(ui->utm->hasFocus())
        {
          ui->utm->setChecked(true);
        }
      else if(ui->krasovsky->hasFocus())
        {
          ui->krasovsky->setChecked(true);
        }
      else if(ui->settings->currentIndex() == 0)
        {
          foreach(QLineEdit* ledit, findChildren<QLineEdit*>())
            if(ledit->hasFocus())
              {
                if(txt_m == "f")
                  {
                    moveLeft();
                    showKeyboard();
                    ui->keyboard->show();
                    k1_selected();
                    txt_m = "1";
                  }
                else if(txt_m == "1")
                  {
                    ledit->setText(ledit->text() + "1");
                  }
                else if(txt_m == "2")
                  {
                    ledit->setText(ledit->text() + "2");
                  }
                else if(txt_m == "3")
                  {
                    ledit->setText(ledit->text() + "3");
                  }
                else if(txt_m == "4")
                  {
                    ledit->setText(ledit->text() + "4");
                  }
                else if(txt_m == "5")
                  {
                    ledit->setText(ledit->text() + "5");
                  }
                else if(txt_m == "6")
                  {
                    ledit->setText(ledit->text() + "6");
                  }
                else if(txt_m == "7")
                  {
                    ledit->setText(ledit->text() + "7");
                  }
                else if(txt_m == "8")
                  {
                    ledit->setText(ledit->text() + "8");
                  }
                else if(txt_m == "9")
                  {
                    ledit->setText(ledit->text() + "9");
                  }
                else if(txt_m == "0")
                  {
                    ledit->setText(ledit->text() + "0");
                  }
                else if(txt_m == "del")
                  {
                    ledit->backspace();
                  }
                else if(txt_m == "ok")
                  {
                    on_ok_released();
                    moveRight();
                    hideKeyboard();
                    txt_m = "f";
                  }
              }
        }
      else if(ui->txtPassReset->hasFocus())
        {
          if(txt_m == "1")
            {
              ui->txtPassReset->setText(ui->txtPassReset->text() + "1");
            }
          else if(txt_m == "2")
            {
              ui->txtPassReset->setText(ui->txtPassReset->text() + "2");
            }
          else if(txt_m == "3")
            {
              ui->txtPassReset->setText(ui->txtPassReset->text() + "3");
            }
          else if(txt_m == "4")
            {
              ui->txtPassReset->setText(ui->txtPassReset->text() + "4");
            }
          else if(txt_m == "5")
            {
              ui->txtPassReset->setText(ui->txtPassReset->text() + "5");
            }
          else if(txt_m == "6")
            {
              ui->txtPassReset->setText(ui->txtPassReset->text() + "6");
            }
          else if(txt_m == "7")
            {
              ui->txtPassReset->setText(ui->txtPassReset->text() + "7");
            }
          else if(txt_m == "8")
            {
              ui->txtPassReset->setText(ui->txtPassReset->text() + "8");
            }
          else if(txt_m == "9")
            {
              ui->txtPassReset->setText(ui->txtPassReset->text() + "9");
            }
          else if(txt_m == "0")
            {
              ui->txtPassReset->setText(ui->txtPassReset->text() + "0");
            }
          else if(txt_m == "del")
            {
              ui->txtPassReset->backspace();
            }
          else if(txt_m == "ok")
            {
              on_ok_released();
              ui->grBoxReset->setGeometry(270,20,551,221);
              hideKeyboard();
              txt_m = "f";
            }
          else if(txt_m == "f")
            {
              ui->grBoxReset->setGeometry(120,20,551,221);
              ui->keyboard->setGeometry(800,350,251,291);
              ui->keyboard->show();
              k1_selected();
              txt_m = "1";
            }
        }
      else if(ui->btnConfirmPassReset->hasFocus())
        {
          on_btnConfirmPassReset_released();

          if(ui->btnReset->hasFocus())
            {
              btnReset_pressed();
            }
        }
      else if(ui->ok_reset->hasFocus())
        {
          ui->wrong_reset->hide();
          ui->txtPassReset->setFocus();
        }
      else if(ui->btnChooseLang->hasFocus())
        {
          if(flgBG_m == true)
            {
              switchToBG();
            }
          else if(flgBG_m == false)
            {
              switchToEN();
            }
        }
      else if(ui->btnBack->hasFocus())
        {
          on_btnBack_released();
        }
>>>>>>> merge rev
    }
  else if(event->key() == Qt::Key_F3) //left
    {
<<<<<<< working copy
        gpioBtnLeft();
    }
    else if(event->key() == Qt::Key_F4) //right
    {
        gpioBtnRight();
=======
      if(ui->btnEN->hasFocus())
        {
          ui->btnBG->setFocus();
          on_btnBG_pressed();
        }
      else if(ui->btn_plus->hasFocus())
        {
          btn_plus_released();
          ui->btn_minus->setFocus();
          btn_minus_pressed();
        }
      else if(ui->btnConfirmDecl->hasFocus())
        {
          btnConfirmDecl_released();
          ui->k_del_magneticDeclination->setFocus();
          k_del_magneticDeclination_selected();
        }
      else if(ui->k_del_magneticDeclination->hasFocus())
        {
          k_del_magneticDeclination_released();
          ui->k_dot_magneticDeclination->setFocus();
          k_dot_magneticDeclination_selected();
        }
      else if(ui->k_dot_magneticDeclination->hasFocus())
        {
          k_dot_magneticDeclination_released();
          ui->k_plus_magneticDeclination->setFocus();
          k_plus_magneticDeclination_selected();
        }
      else if(ui->k_plus_magneticDeclination->hasFocus())
        {
          k_plus_magneticDeclination_released();
          ui->k0_magneticDeclination->setFocus();
          k0_magneticDeclination_selected();
        }
      else if(ui->k0_magneticDeclination->hasFocus())
        {
          k0_magneticDeclination_released();
          ui->k_minus_magneticDeclination->setFocus();
          k_minus_magneticDeclination_selected();
        }
      else if(ui->k_minus_magneticDeclination->hasFocus())
        {
          k_minus_magneticDeclination_released();
          ui->k9_magneticDeclination->setFocus();
          k9_magneticDeclination_selected();
        }
      else if(ui->k9_magneticDeclination->hasFocus())
        {
          k9_magneticDeclination_released();
          ui->k8_magneticDeclination->setFocus();
          k8_magneticDeclination_selected();
        }
      else if(ui->k8_magneticDeclination->hasFocus())
        {
          k8_magneticDeclination_released();
          ui->k7_magneticDeclination->setFocus();
          k7_magneticDeclination_selected();
        }
      else if(ui->k7_magneticDeclination->hasFocus())
        {
          k7_magneticDeclination_released();
          ui->k6_magneticDeclination->setFocus();
          k6_magneticDeclination_selected();
        }
      else if(ui->k6_magneticDeclination->hasFocus())
        {
          k6_magneticDeclination_released();
          ui->k5_magneticDeclination->setFocus();
          k5_magneticDeclination_selected();
        }
      else if(ui->k5_magneticDeclination->hasFocus())
        {
          k5_magneticDeclination_released();
          ui->k4_magneticDeclination->setFocus();
          k4_magneticDeclination_selected();
        }
      else if(ui->k4_magneticDeclination->hasFocus())
        {
          k4_magneticDeclination_released();
          ui->k3_magneticDeclination->setFocus();
          k3_magneticDeclination_selected();
        }
      else if(ui->k3_magneticDeclination->hasFocus())
        {
          k3_magneticDeclination_released();
          ui->k2_magneticDeclination->setFocus();
          k2_magneticDeclination_selected();
        }
      else if(ui->k2_magneticDeclination->hasFocus())
        {
          k2_magneticDeclination_released();
          ui->k1_magneticDeclination->setFocus();
          k1_magneticDeclination_selected();
        }
      else if(ui->krasovsky->hasFocus())
        {
          setKrasovskyStyleSheet();

          ui->utm->setFocus();
          ui->utm->setStyleSheet("background:gray;");
        }
      else if(ui->utm->hasFocus())
        {
          setUtmStyleSheet();

          ui->wgs->setFocus();
          ui->wgs->setStyleSheet("background:gray;");
        }

      else if(txt_m == "del")
        {
          del_released();
          k0_selected();
          txt_m = "0";
        }
      else if(txt_m == "0")
        {
          k0_released();
          ok_selected();
          txt_m = "ok";
        }
      else if(txt_m == "ok")
        {
          ok_released();
          k9_selected();
          txt_m = "9";
        }
      else if(txt_m == "9")
        {
          k9_released();
          k8_selected();
          txt_m = "8";
        }
      else if(txt_m == "8")
        {
          k8_released();
          k7_selected();
          txt_m = "7";
        }
      else if(txt_m == "7")
        {
          k7_released();
          k6_selected();
          txt_m = "6";
        }
      else if(txt_m == "6")
        {
          k6_released();
          k5_selected();
          txt_m = "5";
        }
      else if(txt_m == "5")
        {
          k5_released();
          k4_selected();
          txt_m = "4";
        }
      else if(txt_m == "4")
        {
          k4_released();
          k3_selected();
          txt_m = "3";
        }
      else if(txt_m == "3")
        {
          k3_released();
          k2_selected();
          txt_m = "2";
        }
      else if(txt_m == "2")
        {
          k2_released();
          k1_selected();
          txt_m = "1";
        }
      //else if(txt_m == "1")
      //{
      //    k1_released();
      //    txt_m = "f";
      //}
    }
  else if(event->key() == Qt::Key_F4) // right
    {
      if(ui->btnBG->hasFocus())
        {
          ui->btnEN->setFocus();
          on_btnEN_pressed();
        }
      else if(ui->btn_minus->hasFocus())
        {
          btn_minus_released();
          ui->btn_plus->setFocus();
          btn_plus_pressed();
        }
      else if(ui->k1_magneticDeclination->hasFocus())
        {
          k1_magneticDeclination_released();
          ui->k2_magneticDeclination->setFocus();
          k2_magneticDeclination_selected();
        }
      else if(ui->k2_magneticDeclination->hasFocus())
        {
          k2_magneticDeclination_released();
          ui->k3_magneticDeclination->setFocus();
          k3_magneticDeclination_selected();
        }
      else if(ui->k3_magneticDeclination->hasFocus())
        {
          k3_magneticDeclination_released();
          ui->k4_magneticDeclination->setFocus();
          k4_magneticDeclination_selected();
        }
      else if(ui->k4_magneticDeclination->hasFocus())
        {
          k4_magneticDeclination_released();
          ui->k5_magneticDeclination->setFocus();
          k5_magneticDeclination_selected();
        }
      else if(ui->k5_magneticDeclination->hasFocus())
        {
          k5_magneticDeclination_released();
          ui->k6_magneticDeclination->setFocus();
          k6_magneticDeclination_selected();
        }
      else if(ui->k6_magneticDeclination->hasFocus())
        {
          k6_magneticDeclination_released();
          ui->k7_magneticDeclination->setFocus();
          k7_magneticDeclination_selected();
        }
      else if(ui->k7_magneticDeclination->hasFocus())
        {
          k7_magneticDeclination_released();
          ui->k8_magneticDeclination->setFocus();
          k8_magneticDeclination_selected();
        }
      else if(ui->k8_magneticDeclination->hasFocus())
        {
          k8_magneticDeclination_released();
          ui->k9_magneticDeclination->setFocus();
          k9_magneticDeclination_selected();
        }
      else if(ui->k9_magneticDeclination->hasFocus())
        {
          k9_magneticDeclination_released();
          ui->k_minus_magneticDeclination->setFocus();
          k_minus_magneticDeclination_selected();
        }
      else if(ui->k_minus_magneticDeclination->hasFocus())
        {
          k_minus_magneticDeclination_released();
          ui->k0_magneticDeclination->setFocus();
          k0_magneticDeclination_selected();
        }
      else if(ui->k0_magneticDeclination->hasFocus())
        {
          k0_magneticDeclination_released();
          ui->k_plus_magneticDeclination->setFocus();
          k_plus_magneticDeclination_selected();
        }
      else if(ui->k_plus_magneticDeclination->hasFocus())
        {
          k_plus_magneticDeclination_released();
          ui->k_dot_magneticDeclination->setFocus();
          k_dot_magneticDeclination_selected();
        }
      else if(ui->k_dot_magneticDeclination->hasFocus())
        {
          k_dot_magneticDeclination_released();
          ui->k_del_magneticDeclination->setFocus();
          k_del_magneticDeclination_selected();
        }
      else if(ui->k_del_magneticDeclination->hasFocus())
        {
          k_del_magneticDeclination_released();
          ui->btnConfirmDecl->setFocus();
          btnConfirmDecl_selected();
        }
      else if(ui->wgs->hasFocus())
        {
          setWgsStyleSheet();
          ui->utm->setFocus();
          ui->utm->setStyleSheet("background:gray;");
        }
      else if(ui->utm->hasFocus())
        {
          setUtmStyleSheet();

          ui->krasovsky->setFocus();
          ui->krasovsky->setStyleSheet("background:gray;");
        }
      else if(txt_m == "1")
        {
          k1_released();
          k2_selected();
          txt_m = "2";
        }
      else if(txt_m == "2")
        {
          k2_released();
          k3_selected();
          txt_m = "3";
        }
      else if(txt_m == "3")
        {
          k3_released();
          k4_selected();
          txt_m = "4";
        }
      else if(txt_m == "4")
        {
          k4_released();
          k5_selected();
          txt_m = "5";
        }
      else if(txt_m == "5")
        {
          k5_released();
          k6_selected();
          txt_m = "6";
        }
      else if(txt_m == "6")
        {
          k6_released();
          k7_selected();
          txt_m = "7";
        }
      else if(txt_m == "7")
        {
          k7_released();
          k8_selected();
          txt_m = "8";
        }
      else if(txt_m == "8")
        {
          k8_released();
          k9_selected();
          txt_m = "9";
        }
      else if(txt_m == "9")
        {
          k9_released();
          ok_selected();
          txt_m = "ok";
        }
      else if(txt_m == "ok")
        {
          ok_released();
          k0_selected();
          txt_m = "0";
        }
      else if(txt_m == "0")
        {
          k0_released();
          del_selected();
          txt_m = "del";
        }
>>>>>>> merge rev
    }
  else if(event->key() == Qt::Key_F1) //up
    {
<<<<<<< working copy
        gpioBtnUp();
=======
      //if(ui->settings->currentIndex() == 7)
      //{
      //    ui->settings->setCurrentIndex(6);
      //    ui->btnConfirmPassReset->setFocus();
      //    btnConfirmPassReset_pressed();
      //}

      if(ui->btnBack->hasFocus())
        {
          btnBack_released();
          ui->settings->setCurrentIndex(6);
          ui->btnConfirmPassReset->setFocus();
          btnConfirmPassReset_selected();
        }
      else if(ui->btnConfirmPassReset->hasFocus())
        {
          btnConfirmPassReset_released();
          ui->txtPassReset->setFocus();
        }
      else if(ui->btnReset->hasFocus())
        {
          btnReset_released();
          ui->btnReset->hide();
          ui->grBoxReset->show();
          ui->settings->setCurrentIndex(5);
          ui->btn_minus->setFocus();
          btn_minus_pressed();
        }
      else if(ui->btn_minus->hasFocus())
        {
          btn_minus_released();
          ui->settings->setCurrentIndex(4);
          ui->btnChooseCoordSys->setFocus();
          btnChooseCoordSys_selected();
        }
      else if(ui->btn_plus->hasFocus())
        {
          btn_plus_released();
          ui->settings->setCurrentIndex(4);
          ui->btnChooseCoordSys->setFocus();
          btnChooseCoordSys_selected();
        }
      else if(ui->btnChooseCoordSys->hasFocus())
        {
          btnChooseCoordSys_released();
          ui->wgs->setFocus();
          ui->wgs->setStyleSheet("background:gray;");
        }
      else if(ui->wgs->hasFocus())
        {
          setWgsStyleSheet();

          ui->settings->setCurrentIndex(3);
          ui->btnConfirmDecl->setFocus();
          btnConfirmDecl_selected();
        }
      else if(ui->utm->hasFocus())
        {
          setUtmStyleSheet();

          ui->settings->setCurrentIndex(3);
          ui->btnConfirmDecl->setFocus();
          btnConfirmDecl_selected();
        }
      else if(ui->krasovsky->hasFocus())
        {
          setKrasovskyStyleSheet();

          ui->settings->setCurrentIndex(3);
          ui->btnConfirmDecl->setFocus();
          btnConfirmDecl_selected();
        }
      else if(ui->k_dot_magneticDeclination->hasFocus())
        {
          k_dot_magneticDeclination_released();
          ui->k_minus_magneticDeclination->setFocus();
          k_minus_magneticDeclination_selected();
        }
      else if(ui->k_minus_magneticDeclination->hasFocus())
        {
          k_minus_magneticDeclination_released();
          ui->k7_magneticDeclination->setFocus();
          k7_magneticDeclination_selected();
        }
      else if(ui->k7_magneticDeclination->hasFocus())
        {
          k7_magneticDeclination_released();
          ui->k4_magneticDeclination->setFocus();
          k4_magneticDeclination_selected();
        }
      else if(ui->k4_magneticDeclination->hasFocus())
        {
          k4_magneticDeclination_released();
          ui->k1_magneticDeclination->setFocus();
          k1_magneticDeclination_selected();
        }
      else if(ui->k_del_magneticDeclination->hasFocus())
        {
          k_del_magneticDeclination_released();
          ui->k0_magneticDeclination->setFocus();
          k0_magneticDeclination_selected();
        }
      else if(ui->k0_magneticDeclination->hasFocus())
        {
          k0_magneticDeclination_released();
          ui->k8_magneticDeclination->setFocus();
          k8_magneticDeclination_selected();
        }
      else if(ui->k8_magneticDeclination->hasFocus())
        {
          k8_magneticDeclination_released();
          ui->k5_magneticDeclination->setFocus();
          k5_magneticDeclination_selected();
        }
      else if(ui->k5_magneticDeclination->hasFocus())
        {
          k5_magneticDeclination_released();
          ui->k2_magneticDeclination->setFocus();
          k2_magneticDeclination_selected();
        }
      else if(ui->k_plus_magneticDeclination->hasFocus())
        {
          k_plus_magneticDeclination_released();
          ui->k9_magneticDeclination->setFocus();
          k9_magneticDeclination_selected();
        }
      else if(ui->k9_magneticDeclination->hasFocus())
        {
          k9_magneticDeclination_released();
          ui->k6_magneticDeclination->setFocus();
          k6_magneticDeclination_selected();
        }
      else if(ui->k6_magneticDeclination->hasFocus())
        {
          k6_magneticDeclination_released();
          ui->k3_magneticDeclination->setFocus();
          k3_magneticDeclination_selected();
        }
      else if(ui->btnConfirmDecl->hasFocus())
        {
          btnConfirmDecl_released();
          ui->settings->setCurrentIndex(2);
          ui->btnConfirmDate->setFocus();
          btnConfirmDate_selected();
        }
      else if(ui->btnConfirmDate->hasFocus())
        {
          btnConfirmDate_released();
          ui->timeEdit->setFocus();
        }
      else if(ui->timeEdit->hasFocus())
        {
          ui->dateEdit->setFocus();
        }
      else if(ui->dateEdit->hasFocus())
        {
          ui->settings->setCurrentIndex(1);
          ui->btnChooseLang->setFocus();
          btnChooseLang_selected();
        }
      else if(ui->btnChooseLang->hasFocus())
        {
          btnChooseLang_released();
          ui->btnBG->setFocus();
          on_btnBG_pressed();
        }
      else if(ui->btnBG->hasFocus() || ui->btnEN->hasFocus())
        {
          ui->settings->setCurrentIndex(0);
          ui->btnConfirmPass->setFocus();
          btnConfirmPass_selected();
        }
      else if(ui->btnConfirmPass->hasFocus())
        {
          btnConfirmPass_released();
          ui->txtConfPass->setFocus();
          moveLeft();
          showKeyboard();
          ui->keyboard->show();
        }
      else if(ui->txtConfPass->hasFocus())
        {
          ui->txtNewPass->setFocus();
          moveLeft();
          showKeyboard();
          ui->keyboard->show();
        }
      else if(ui->txtNewPass->hasFocus())
        {
          ui->txtCurrPass->setFocus();
          moveLeft();
          showKeyboard();
          ui->keyboard->show();
        }
      else if(ui->btnChooseCoordSys->hasFocus())
        {
          ui->wgs->setFocus();
          ui->wgs->setStyleSheet("background:gray;");
        }

      else if(txt_m == "f")
        {
          if(ui->btnConfirmPass->hasFocus())
            {
              btnConfirmPass_released();
              ui->txtConfPass->setFocus();
              moveLeft();
              showKeyboard();
              ui->keyboard->show();
            }
          else if(ui->txtConfPass->hasFocus())
            {
              ui->txtNewPass->setFocus();
              moveLeft();
              showKeyboard();
              ui->keyboard->show();
            }
          else if(ui->txtNewPass->hasFocus())
            {
              ui->txtCurrPass->setFocus();
              moveLeft();
              showKeyboard();
              ui->keyboard->show();
            }
          else if(ui->txtPassReset->hasFocus())
            {
              ui->grBoxReset->setGeometry(270,20,551,221);
              hideKeyboard();
              btnConfirmPassReset_released();
              ui->settings->setCurrentIndex(5);
              ui->btn_minus->setFocus();
              btn_minus_pressed();
            }
        }
      else if(txt_m == "del")
        {
          del_released();
          k9_selected();
          txt_m = "9";
        }
      else if(txt_m == "9")
        {
          k9_released();
          k6_selected();
          txt_m = "6";
        }
      else if(txt_m == "6")
        {
          k6_released();
          k3_selected();
          txt_m = "3";
        }
      else if(txt_m == "0")
        {
          k0_released();
          k8_selected();
          txt_m = "8";
        }
      else if(txt_m == "8")
        {
          k8_released();
          k5_selected();
          txt_m = "5";
        }
      else if(txt_m == "5")
        {
          k5_released();
          k2_selected();
          txt_m = "2";
        }
      else if(txt_m == "ok")
        {
          ok_released();
          k7_selected();
          txt_m = "7";
        }
      else if(txt_m == "7")
        {
          k7_released();
          k4_selected();
          txt_m = "4";
        }
      else if(txt_m == "4")
        {
          k4_released();
          k1_selected();
          txt_m = "1";
        }
>>>>>>> merge rev
    }
  else if(event->key() == Qt::Key_F2) //down
    {
<<<<<<< working copy
        gpioBtnDown();
=======
      //if(ui->settings->currentIndex() == 7)
      //{
      //    ui->btnBack->setFocus();
      //    btnBack_pressed();
      //}
      if(ui->btnConfirmPass->hasFocus())
        {
          btnConfirmPass_released();
          ui->settings->setCurrentIndex(1);
          ui->btnBG->setFocus();
          on_btnBG_pressed();
        }
      else if(ui->btnConfirmPassReset->hasFocus())
        {
          btnConfirmPassReset_released();
          ui->btnBack->setFocus();
          btnBack_selected();
        }
      else if(ui->btnReset->hasFocus())
        {
          btnReset_released();
          ui->btnReset->hide();
          ui->grBoxReset->show();
          ui->btnBack->setFocus();
          btnBack_selected();
        }
      else if(ui->btnBG->hasFocus() || ui->btnEN->hasFocus())
        {
          ui->btnChooseLang->setFocus();
          btnChooseLang_selected();
        }
      else if(ui->btnChooseLang->hasFocus())
        {
          btnChooseLang_released();
          ui->settings->setCurrentIndex(2);
          ui->dateEdit->setFocus();
        }
      else if(ui->dateEdit->hasFocus())
        {
          ui->timeEdit->setFocus();
        }
      else if(ui->timeEdit->hasFocus())
        {
          ui->btnConfirmDate->setFocus();
          btnConfirmDate_selected();
        }
      else if(ui->btnConfirmDate->hasFocus())
        {
          btnConfirmDate_released();
          ui->settings->setCurrentIndex(3);
          ui->k1_magneticDeclination->setFocus();
          k1_magneticDeclination_selected();
        }
      else if(ui->k1_magneticDeclination->hasFocus())
        {
          k1_magneticDeclination_released();
          ui->k4_magneticDeclination->setFocus();
          k4_magneticDeclination_selected();
        }
      else if(ui->k4_magneticDeclination->hasFocus())
        {
          k4_magneticDeclination_released();
          ui->k7_magneticDeclination->setFocus();
          k7_magneticDeclination_selected();
        }
      else if(ui->k7_magneticDeclination->hasFocus())
        {
          k7_magneticDeclination_released();
          ui->k_minus_magneticDeclination->setFocus();
          k_minus_magneticDeclination_selected();
        }
      else if(ui->k_minus_magneticDeclination->hasFocus())
        {
          k_minus_magneticDeclination_released();
          ui->k_dot_magneticDeclination->setFocus();
          k_dot_magneticDeclination_selected();
        }
      else if(ui->k_dot_magneticDeclination->hasFocus())
        {
          k_dot_magneticDeclination_released();
          ui->btnConfirmDecl->setFocus();
          btnConfirmDecl_selected();
        }
      else if(ui->k2_magneticDeclination->hasFocus())
        {
          k2_magneticDeclination_released();
          ui->k5_magneticDeclination->setFocus();
          k5_magneticDeclination_selected();
        }
      else if(ui->k5_magneticDeclination->hasFocus())
        {
          k5_magneticDeclination_released();
          ui->k8_magneticDeclination->setFocus();
          k8_magneticDeclination_selected();
        }
      else if(ui->k8_magneticDeclination->hasFocus())
        {
          k8_magneticDeclination_released();
          ui->k0_magneticDeclination->setFocus();
          k0_magneticDeclination_selected();
        }
      else if(ui->k0_magneticDeclination->hasFocus())
        {
          k0_magneticDeclination_released();
          ui->k_del_magneticDeclination->setFocus();
          k_del_magneticDeclination_selected();
        }
      else if(ui->k3_magneticDeclination->hasFocus())
        {
          k3_magneticDeclination_released();
          ui->k6_magneticDeclination->setFocus();
          k6_magneticDeclination_selected();
        }
      else if(ui->k6_magneticDeclination->hasFocus())
        {
          k6_magneticDeclination_released();
          ui->k9_magneticDeclination->setFocus();
          k9_magneticDeclination_selected();
        }
      else if(ui->k9_magneticDeclination->hasFocus())
        {
          k9_magneticDeclination_released();
          ui->k_plus_magneticDeclination->setFocus();
          k_plus_magneticDeclination_selected();
        }
      else if(ui->k_plus_magneticDeclination->hasFocus())
        {
          k_plus_magneticDeclination_released();
          ui->k_del_magneticDeclination->setFocus();
          k_del_magneticDeclination_selected();
        }
      else if(ui->k_del_magneticDeclination->hasFocus())
        {
          k_del_magneticDeclination_released();
          ui->btnConfirmDecl->setFocus();
          btnConfirmDecl_selected();
        }
      else if(ui->btnConfirmDecl->hasFocus())
        {
          btnConfirmDecl_released();
          ui->settings->setCurrentIndex(4);
          ui->wgs->setFocus();
          ui->wgs->setStyleSheet("background:gray;");
        }
      else if(ui->wgs->hasFocus())
        {
          setWgsStyleSheet();

          ui->btnChooseCoordSys->setFocus();
          btnChooseCoordSys_selected();
        }
      else if(ui->utm->hasFocus())
        {
          setUtmStyleSheet();

          ui->btnChooseCoordSys->setFocus();
          btnChooseCoordSys_selected();
        }
      else if(ui->krasovsky->hasFocus())
        {
          setKrasovskyStyleSheet();

          ui->btnChooseCoordSys->setFocus();
          btnChooseCoordSys_selected();
        }
      else if(ui->btnChooseCoordSys->hasFocus())
        {
          btnChooseCoordSys_released();
          ui->settings->setCurrentIndex(5);
          ui->btn_minus->setFocus();
          btn_minus_pressed();
        }
      else if(ui->btn_minus->hasFocus())
        {
          btn_minus_released();
          ui->settings->setCurrentIndex(6);
          ui->txtPassReset->setFocus();
        }
      else if(ui->btn_plus->hasFocus())
        {
          btn_plus_released();
          ui->settings->setCurrentIndex(6);
          ui->txtPassReset->setFocus();
        }
      else if(txt_m == "f")
        {
          if(ui->txtCurrPass->hasFocus())
            {
              ui->txtNewPass->setFocus();
              moveLeft();
              showKeyboard();
              ui->keyboard->show();
            }
          else if(ui->txtNewPass->hasFocus())
            {
              ui->txtConfPass->setFocus();
              moveLeft();
              showKeyboard();
              ui->keyboard->show();
            }
          else if(ui->txtConfPass->hasFocus())
            {
              ui->btnConfirmPass->setFocus();
              btnConfirmPass_selected();
              moveRight();
              hideKeyboard();
            }
          else if(ui->txtPassReset->hasFocus())
            {
              ui->grBoxReset->setGeometry(270,20,551,221);
              hideKeyboard();
              ui->btnConfirmPassReset->setFocus();
              btnConfirmPassReset_selected();
            }
        }

      else if(txt_m == "1")
        {
          k1_released();
          k4_selected();
          txt_m = "4";
        }
      else if(txt_m == "4")
        {
          k4_released();
          k7_selected();
          txt_m = "7";
        }
      else if(txt_m == "7")
        {
          k7_released();
          ok_selected();
          txt_m = "ok";
        }
      else if(txt_m == "2")
        {
          k2_released();
          k5_selected();
          txt_m = "5";
        }
      else if(txt_m == "5")
        {
          k5_released();
          k8_selected();
          txt_m = "8";
        }
      else if(txt_m == "8")
        {
          k8_released();
          k0_selected();
          txt_m = "0";
        }
      else if(txt_m == "3")
        {
          k3_released();
          k6_selected();
          txt_m = "6";
        }
      else if(txt_m == "6")
        {
          k6_released();
          k9_selected();
          txt_m = "9";
        }
      else if(txt_m == "9")
        {
          k9_released();
          del_selected();
          txt_m = "del";
        }
>>>>>>> merge rev
    }
}

void Menu::setWgsStyleSheet()
{
  ui->wgs->setStyleSheet("QRadioButton::indicator:unchecked{"
                         "background:white;"
                         "border: 1px solid;"
                         "border-color: white;"
                         "width: 11px;"
                         "height: 11px;"
                         "border-radius: 6px;"
                         "}"
                         "QRadioButton::indicator:checked{"
                         "background:black;"
                         "border: 3px solid;"
                         "border-color: white;"
                         "width: 7px;"
                         "height: 7px;"
                         "border-radius: 6px;"
                         "}");
}

void Menu::setUtmStyleSheet()
{
  ui->utm->setStyleSheet("QRadioButton::indicator:unchecked{"
                         "background:white;"
                         "border: 1px solid;"
                         "border-color: white;"
                         "width: 11px;"
                         "height: 11px;"
                         "border-radius: 6px;"
                         "}"
                         "QRadioButton::indicator:checked{"
                         "background:black;"
                         "border: 3px solid;"
                         "border-color: white;"
                         "width: 7px;"
                         "height: 7px;"
                         "border-radius: 6px;"
                         "}");
}

void Menu::setKrasovskyStyleSheet()
{
  ui->krasovsky->setStyleSheet("QRadioButton::indicator:unchecked{"
                               "background:white;"
                               "border: 1px solid;"
                               "border-color: white;"
                               "width: 11px;"
                               "height: 11px;"
                               "border-radius: 6px;"
                               "}"
                               "QRadioButton::indicator:checked{"
                               "background:black;"
                               "border: 3px solid;"
                               "border-color: white;"
                               "width: 7px;"
                               "height: 7px;"
                               "border-radius: 6px;"
                               "}");
}

void Menu::btnReset_pressed()
{
  ui->btnReset->setStyleSheet(
        "border: 2px gray; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: gray;"
        "color: black;"
        );
}

void Menu::btnReset_released()
{
  ui->btnReset->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: white;"
        "color: black;"
        );
}

void Menu::btnReset_selected()
{
  ui->btnReset->setStyleSheet(
        "border: 2px solid white; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: gray;"
        "color: black;"
        );
}

void Menu::btnConfirmPassReset_pressed()
{
  ui->btnConfirmPassReset->setStyleSheet(
        "border: 2px gray; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: gray;"
        "color: black;"
        );
}


void Menu::btnConfirmPassReset_released()
{
  ui->btnConfirmPassReset->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: white;"
        "color: black;"
        );
}

void Menu::btnConfirmPassReset_selected()
{
  ui->btnConfirmPassReset->setStyleSheet(
        "border: 2px solid white; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: gray;"
        "color: black;"
        );
}


void Menu::btnConfirmPass_pressed()
{
  ui->btnConfirmPass->setStyleSheet(
        "border: 2px gray; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: gray;"
        "color: black;"
        );
}

void Menu::btnConfirmPass_released()
{
  ui->btnConfirmPass->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: white;"
        "color: black;"
        );
}

void Menu::btnConfirmPass_selected()
{
  ui->btnConfirmPass->setStyleSheet(
        "border: 2px solid white; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: gray;"
        "color: black;"
        );
}

void Menu::btnChooseLang_pressed()
{
  ui->btnChooseLang->setStyleSheet(
        "border: 2px gray; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: gray;"
        "color: black;"
        );
}


void Menu::btnChooseLang_released()
{
  ui->btnChooseLang->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: white;"
        "color: black;"
        );
}


void Menu::btnChooseLang_selected()
{
  ui->btnChooseLang->setStyleSheet(
        "border: 2px solid white; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: gray;"
        "color: black;"
        );
}


void Menu::btnConfirmDate_pressed()
{
  ui->btnConfirmDate->setStyleSheet(
        "border: 2px gray; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: gray;"
        "color: black;"
        );
}


void Menu::btnConfirmDate_released()
{
  ui->btnConfirmDate->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: white;"
        "color: black;"
        );
}


void Menu::btnConfirmDate_selected()
{
  ui->btnConfirmDate->setStyleSheet(
        "border: 2px solid white; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: gray;"
        "color: black;"
        );
}


void Menu::btnBack_pressed()
{
  ui->btnBack->setStyleSheet(
        "border: 2px gray; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: gray;"
        "color: black;"
        );
}


void Menu::btnBack_released()
{
  ui->btnBack->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: white;"
        "color: black;"
        );
}


void Menu::btnBack_selected()
{
  ui->btnBack->setStyleSheet(
        "border: 2px solid white; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: gray;"
        "color: black;"
        );
}


void Menu::btnHide_pressed()
{
  ui->hide->setStyleSheet(
        "border: 5px solid white;"
        "background: rgba(255, 255, 255, 0);"
        );
}
void Menu::btnHide_released()
{
  ui->hide->setStyleSheet(
        "border: 2px solid white;"
        "background: rgba(255, 255, 255, 0);"
        );
}


void Menu::btnChooseCoordSys_pressed()
{
  ui->btnChooseCoordSys->setStyleSheet(
        "border: 2px gray; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: gray;"
        "color: black;"
        );
}
void Menu::btnChooseCoordSys_released()
{
  ui->btnChooseCoordSys->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: white;"
        "color: black;"
        );
}


void Menu::btnChooseCoordSys_selected()
{
  ui->btnChooseCoordSys->setStyleSheet(
        "border: 2px solid white; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: gray;"
        "color: black;"
        );
}


void Menu::btnConfirmDecl_pressed()
{
  ui->btnConfirmDecl->setStyleSheet(
        "border: 2px gray; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: gray;"
        "color: black;"
        );
}


void Menu::btnConfirmDecl_released()
{
  ui->btnConfirmDecl->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: white;"
        "color: black;"
        );
}


void Menu::btnConfirmDecl_selected()
{
  ui->btnConfirmDecl->setStyleSheet(
        "border: 2px solid white; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: gray;"
        "color: black;"
        );
}


void Menu::k1_pressed()
{
  ui->k1->setStyleSheet(
        "border: 2px gray; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::k1_released()
{
  ui->k1->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: white;"
        "color: black;"
        );
}


void Menu::k1_selected()
{
  ui->k1->setStyleSheet(
        "border: 2px solid white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::k2_pressed()
{
  ui->k2->setStyleSheet(
        "border: 2px gray; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::k2_released()
{
  ui->k2->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: white;"
        "color: black;"
        );
}


void Menu::k2_selected()
{
  ui->k2->setStyleSheet(
        "border: 2px solid white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::k3_pressed()
{
  ui->k3->setStyleSheet(
        "border: 2px gray; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::k3_released()
{
  ui->k3->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: white;"
        "color: black;"
        );
}


void Menu::k3_selected()
{
  ui->k3->setStyleSheet(
        "border: 2px solid white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::k4_pressed()
{
  ui->k4->setStyleSheet(
        "border: 2px gray; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::k4_released()
{
  ui->k4->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: white;"
        "color: black;"
        );
}

void Menu::k4_selected()
{
  ui->k4->setStyleSheet(
        "border: 2px solid white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::k5_pressed()
{
  ui->k5->setStyleSheet(
        "border: 2px gray; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::k5_released()
{
  ui->k5->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: white;"
        "color: black;"
        );
}


void Menu::k5_selected()
{
  ui->k5->setStyleSheet(
        "border: 2px solid white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::k6_pressed()
{
  ui->k6->setStyleSheet(
        "border: 2px gray; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::k6_released()
{
  ui->k6->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: white;"
        "color: black;"
        );
}


void Menu::k6_selected()
{
  ui->k6->setStyleSheet(
        "border: 2px solid white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::k7_pressed()
{
  ui->k7->setStyleSheet(
        "border: 2px gray; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::k7_released()
{
  ui->k7->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: white;"
        "color: black;"
        );
}


void Menu::k7_selected()
{
  ui->k7->setStyleSheet(
        "border: 2px solid white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::k8_pressed()
{
  ui->k8->setStyleSheet(
        "border: 2px gray; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::k8_released()
{
  ui->k8->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: white;"
        "color: black;"
        );
}


void Menu::k8_selected()
{
  ui->k8->setStyleSheet(
        "border: 2px solid white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::k9_pressed()
{
  ui->k9->setStyleSheet(
        "border: 2px gray; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::k9_released()
{
  ui->k9->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: white;"
        "color: black;"
        );
}


void Menu::k9_selected()
{
  ui->k9->setStyleSheet(
        "border: 2px solid white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::k0_pressed()
{
  ui->k0->setStyleSheet(
        "border: 2px gray; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::k0_released()
{
  ui->k0->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: white;"
        "color: black;"
        );
}


void Menu::k0_selected()
{
  ui->k0->setStyleSheet(
        "border: 2px solid white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::ok_pressed()
{
  ui->ok->setStyleSheet(
        "border: 2px gray; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::ok_released()
{
  ui->ok->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: white;"
        "color: black;"
        );
}


void Menu::ok_selected()
{
  ui->ok->setStyleSheet(
        "border: 2px solid white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::del_pressed()
{
  ui->del->setStyleSheet(
        "border: 2px gray; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::del_released()
{
  ui->del->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: white;"
        "color: black;"
        );
}


void Menu::del_selected()
{
  ui->del->setStyleSheet(
        "border: 2px solid white; "
        "border-radius: 10px; "
        "padding: 0 8px; "
        "background: gray;"
        "color: black;"
        );
}


void Menu::m_confirmPass_pressed()
{
  ui->m_confirmPass->setStyleSheet(
        "border: 2px gray; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: gray;"
        "color: black;"
        );
}
void Menu::m_confirmPass_released()
{
  ui->m_confirmPass->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: white;"
        "color: black;"
        );
}
void Menu::m_ok_pressed()
{
  ui->m_ok->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "background: white;"
        "color: black;"
        );
}
void Menu::m_ok_released()
{
  ui->m_ok->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: white;"
        "color: black;"
        );
}
void Menu::m_back_pressed()
{
  ui->m_back->setStyleSheet(
        "border: 2px gray; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: gray;"
        "color: black;"
        );
}
void Menu::m_back_released()
{
  ui->m_back->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: white;"
        "color: black;"
        );
}
void Menu::up_pressed()
{
  ui->up->setStyleSheet(
        "border: 2px rgba(255, 255, 255, 0);"
        "border-radius: 10px;"
        "background: rgba(255, 255, 255, 0);"
        );
}
void Menu::up_released()
{
  ui->up->setStyleSheet(
        "border: 2px rgba(255, 255, 255, 0);"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: rgba(255, 255, 255, 0);"
        );
}
void Menu::down_pressed()
{
  ui->down->setStyleSheet(
        "border: 2px rgba(255, 255, 255, 0);"
        "border-radius: 10px;"
        "background: rgba(255, 255, 255, 0);"
        );
}
void Menu::down_released()
{
  ui->down->setStyleSheet(
        "border: 2px rgba(255, 255, 255, 0);"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: rgba(255, 255, 255, 0);"
        );
}
void Menu::left_pressed()
{
  ui->left->setStyleSheet(
        "border: 2px rgba(255, 255, 255, 0);"
        "border-radius: 10px;"
        "background: rgba(255, 255, 255, 0);"
        );
}
void Menu::left_released()
{
  ui->left->setStyleSheet(
        "border: 2px rgba(255, 255, 255, 0);"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: rgba(255, 255, 255, 0);"
        );
}
void Menu::right_pressed()
{
  ui->right->setStyleSheet(
        "border: 2px rgba(255, 255, 255, 0);"
        "border-radius: 10px;"
        "background: rgba(255, 255, 255, 0);"
        );
}
void Menu::right_released()
{
  ui->right->setStyleSheet(
        "border: 2px rgba(255, 255, 255, 0);"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: rgba(255, 255, 255, 0);"
        );
}


void Menu::k1_magneticDeclination_pressed()
{
  ui->k1_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid white;"
        "color: black;"
        );
}


void Menu::k1_magneticDeclination_released()
{
  ui->k1_magneticDeclination->setStyleSheet(
        "border: 2px solid white;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid black;"
        "color: white;"
        );
}


void Menu::k1_magneticDeclination_selected()
{
  ui->k1_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid gray;"
        "color: black;"
        );
}


void Menu::k2_magneticDeclination_pressed()
{
  ui->k2_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid white;"
        "color: black;"
        );
}


void Menu::k2_magneticDeclination_released()
{
  ui->k2_magneticDeclination->setStyleSheet(
        "border: 2px solid white;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid black;"
        "color: white;"
        );
}


void Menu::k2_magneticDeclination_selected()
{
  ui->k2_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid gray;"
        "color: black;"
        );
}


void Menu::k3_magneticDeclination_pressed()
{
  ui->k3_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid white;"
        "color: black;"
        );
}


void Menu::k3_magneticDeclination_released()
{
  ui->k3_magneticDeclination->setStyleSheet(
        "border: 2px solid white;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid black;"
        "color: white;"
        );
}


void Menu::k3_magneticDeclination_selected()
{
  ui->k3_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid gray;"
        "color: black;"
        );
}


void Menu::k4_magneticDeclination_pressed()
{
  ui->k4_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid white;"
        "color: black;"
        );
}


void Menu::k4_magneticDeclination_released()
{
  ui->k4_magneticDeclination->setStyleSheet(
        "border: 2px solid white;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid black;"
        "color: white;"
        );
}


void Menu::k4_magneticDeclination_selected()
{
  ui->k4_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid gray;"
        "color: black;"
        );
}


void Menu::k5_magneticDeclination_pressed()
{
  ui->k5_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid white;"
        "color: black;"
        );
}


void Menu::k5_magneticDeclination_released()
{
  ui->k5_magneticDeclination->setStyleSheet(
        "border: 2px solid white;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid black;"
        "color: white;"
        );
}


void Menu::k5_magneticDeclination_selected()
{
  ui->k5_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid gray;"
        "color: black;"
        );
}


void Menu::k6_magneticDeclination_pressed()
{
  ui->k6_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid white;"
        "color: black;"
        );
}


void Menu::k6_magneticDeclination_released()
{
  ui->k6_magneticDeclination->setStyleSheet(
        "border: 2px solid white;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid black;"
        "color: white;"
        );
}


void Menu::k6_magneticDeclination_selected()
{
  ui->k6_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid gray;"
        "color: black;"
        );
}


void Menu::k7_magneticDeclination_pressed()
{
  ui->k7_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid white;"
        "color: black;"
        );
}


void Menu::k7_magneticDeclination_released()
{
  ui->k7_magneticDeclination->setStyleSheet(
        "border: 2px solid white;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid black;"
        "color: white;"
        );
}


void Menu::k7_magneticDeclination_selected()
{
  ui->k7_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid gray;"
        "color: black;"
        );
}


void Menu::k8_magneticDeclination_pressed()
{
  ui->k8_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid white;"
        "color: black;"
        );
}


void Menu::k8_magneticDeclination_released()
{
  ui->k8_magneticDeclination->setStyleSheet(
        "border: 2px solid white;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid black;"
        "color: white;"
        );
}


void Menu::k8_magneticDeclination_selected()
{
  ui->k8_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid gray;"
        "color: black;"
        );
}


void Menu::k9_magneticDeclination_pressed()
{
  ui->k9_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid white;"
        "color: black;"
        );
}


void Menu::k9_magneticDeclination_released()
{
  ui->k9_magneticDeclination->setStyleSheet(
        "border: 2px solid white;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid black;"
        "color: white;"
        );
}


void Menu::k9_magneticDeclination_selected()
{
  ui->k9_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid gray;"
        "color: black;"
        );
}


void Menu::k0_magneticDeclination_pressed()
{
  ui->k0_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid white;"
        "color: black;"
        );
}


void Menu::k0_magneticDeclination_released()
{
  ui->k0_magneticDeclination->setStyleSheet(
        "border: 2px solid white;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid black;"
        "color: white;"
        );
}


void Menu::k0_magneticDeclination_selected()
{
  ui->k0_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid gray;"
        "color: black;"
        );
}


void Menu::k_minus_magneticDeclination_pressed()
{
  ui->k_minus_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid white;"
        "color: black;"
        );
}


void Menu::k_minus_magneticDeclination_released()
{
  ui->k_minus_magneticDeclination->setStyleSheet(
        "border: 2px solid white;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid black;"
        "color: white;"
        );
}


void Menu::k_minus_magneticDeclination_selected()
{
  ui->k_minus_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid gray;"
        "color: black;"
        );
}


void Menu::k_plus_magneticDeclination_pressed()
{
  ui->k_plus_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid white;"
        "color: black;"
        );
}


void Menu::k_plus_magneticDeclination_released()
{
  ui->k_plus_magneticDeclination->setStyleSheet(
        "border: 2px solid white;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid black;"
        "color: white;"
        );
}


void Menu::k_plus_magneticDeclination_selected()
{
  ui->k_plus_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid gray;"
        "color: black;"
        );
}


void Menu::k_dot_magneticDeclination_pressed()
{
  ui->k_dot_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid white;"
        "color: black;"
        );
}


void Menu::k_dot_magneticDeclination_released()
{
  ui->k_dot_magneticDeclination->setStyleSheet(
        "border: 2px solid white;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid black;"
        "color: white;"
        );
}


void Menu::k_dot_magneticDeclination_selected()
{
  ui->k_dot_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid gray;"
        "color: black;"
        );
}


void Menu::k_del_magneticDeclination_pressed()
{
  ui->k_del_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid white;"
        "color: black;"
        );
}


void Menu::k_del_magneticDeclination_released()
{
  ui->k_del_magneticDeclination->setStyleSheet(
        "border: 2px solid white;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid black;"
        "color: white;"
        );
}


void Menu::k_del_magneticDeclination_selected()
{
  ui->k_del_magneticDeclination->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: soid gray;"
        "color: black;"
        );
}


<<<<<<< working copy
void Menu::btnPan_minus_pressed()
{
    ui->btnPan_minus->setStyleSheet(
        "border: 2px solid white;"
        "background: gray;"
        "color:white;"
        );
}
void Menu::btnPan_minus_released()
{
    ui->btnPan_minus->setStyleSheet(
        "border: 2px solid white;"
        "background: black;"
        "color:white;"
        );
}
void Menu::btnPan_plus_pressed()
{
    ui->btnPan_plus->setStyleSheet(
=======
void Menu::btn_minus_pressed()
{
  ui->btn_minus->setStyleSheet(
>>>>>>> merge rev
        "border: 2px solid white;"
        "background: gray;"
        "color:white;"
        );
}
<<<<<<< working copy
void Menu::btnPan_plus_released()
{
    ui->btnPan_plus->setStyleSheet(
=======
void Menu::btn_minus_released()
{
  ui->btn_minus->setStyleSheet(
>>>>>>> merge rev
        "border: 2px solid white;"
        "background: black;"
        "color:white;"
        );
}
<<<<<<< working copy

void Menu::btnTilt_minus_pressed()
{
    ui->btnTilt_minus->setStyleSheet(
=======
void Menu::btn_plus_pressed()
{
  ui->btn_plus->setStyleSheet(
>>>>>>> merge rev
        "border: 2px solid white;"
        "background: gray;"
        "color:white;"
        );
}
<<<<<<< working copy

void Menu::btnTilt_minus_released()
{
    ui->btnTilt_minus->setStyleSheet(
        "border: 2px solid white;"
        "background: black;"
        "color:white;"
        );
}

void Menu::btnTilt_plus_pressed()
{
    ui->btnTilt_plus->setStyleSheet(
        "border: 2px solid white;"
        "background: gray;"
        "color:white;"
        );
}

void Menu::btnTilt_plus_released()
{
    ui->btnTilt_plus->setStyleSheet(
=======
void Menu::btn_plus_released()
{
  ui->btn_plus->setStyleSheet(
>>>>>>> merge rev
        "border: 2px solid white;"
        "background: black;"
        "color:white;"
        );
}


void Menu::ok_reset_pressed()
{
  ui->ok_reset->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "background: white;"
        "color: black;"
        );
}
void Menu::ok_reset_released()
{
  ui->ok_reset->setStyleSheet(
        "border: 2px solid black;"
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: white;"
        "color: black;"
        );
}


void Menu::setDateTime()
{
  //ui->calendarWidget->setSelectedDate(Date.fromString(currentDate));

  //currentTime = ui->timeEdit->time().toString();
  ui->timeEdit->setTime(Time.fromString(currentTime));
}


void Menu::switchToBG()
{
  flgBG_m = true;

  //Settings
  ui->lblSettings->setText(lblSettingsTxt_BG);
  ui->lblSettings->adjustSize();
  ui->lblSettings->setGeometry(
        (ui->settingsBox->width() - ui->lblSettings->width())/2,
        ui->lblSettings->geometry().y(),
        ui->lblSettings->width(),
        ui->lblSettings->height());

  ui->lblCurrPass->setText(lblCurrPassTxt_BG);
  ui->lblNewPass->setText(lblNewPassTxt_BG);
  ui->lblConfPass->setText(lblConfPassTxt_BG);
  ui->btnConfirmPass->setText(btnConfirmTxt_BG);

  ui->lblChooseLang->setText(lblChooseLangTxt_BG);
  ui->lblChooseLang->adjustSize();
  ui->lblChooseLang->setGeometry(
        (ui->settings->width() - ui->lblChooseLang->width())/2,
        ui->lblChooseLang->geometry().y(),
        ui->lblChooseLang->width(),
        ui->lblChooseLang->height());

  ui->btnChooseLang->setText(btnChooseTxt_BG);
  ui->btnConfirmDate->setText(btnConfirmTxt_BG);
  ui->k_del_magneticDeclination->setText(btnDelTxt_BG);
  ui->lblInsert->setText(lblInsertTxt_m_BG);
  ui->btnConfirmDecl->setText(btnConfirmTxt_BG);

  ui->lblChoose->setText(lblChooseCSTxt_BG);
  ui->lblChoose->adjustSize();
  ui->lblChoose->setGeometry(
        (ui->settings->width() - ui->lblChoose->width())/2,
        ui->lblChoose->geometry().y(),
        ui->lblChoose->width(),
        ui->lblChoose->height());

  ui->btnChooseCoordSys->setText(btnChooseTxt_BG);
  ui->settings->setItemText(0, tabChangePassTxt_BG);
  ui->settings->setItemText(1, tabLanguageTxt_BG);
  ui->settings->setItemText(2, tabDateTimeTxt_BG);
  ui->settings->setItemText(3, tabMagnDeclTxt_BG);
  ui->settings->setItemText(4, tabCoordSysTxt_BG);

  ui->lblAdjustSpeed->setText(lblAdjustMovementSpeed_BG);
  ui->lblAdjustSpeed->adjustSize();
  ui->lblAdjustSpeed->setGeometry(
        (ui->settings->width() - ui->lblAdjustSpeed->width())/2,
        ui->lblAdjustSpeed->geometry().y(),
        ui->lblAdjustSpeed->width(),
        ui->lblAdjustSpeed->height());

  ui->lblCurrentSpeed->setText(lblCurrentSpeed_BG);
  ui->lblCurrentSpeed->adjustSize();
  ui->lblCurrentSpeed->setGeometry(
        (ui->settings->width() - ui->lblCurrentSpeed->width())/2,
        ui->lblCurrentSpeed->geometry().y(),
        ui->lblCurrentSpeed->width(),
        ui->lblCurrentSpeed->height());

  ui->lblInsertPassword->setText(lblInsertTxt_BG);
  ui->lblInsertPassword->adjustSize();
  ui->lblInsertPassword->setGeometry(
        (ui->grBoxReset->width() - ui->lblInsertPassword->width())/2,
        ui->lblInsertPassword->geometry().y(),
        ui->lblInsertPassword->width(),
        ui->lblInsertPassword->height());

  ui->lblWrongPass->setText(lblWrongPassTxt_BG);
  ui->lblWrongPass->adjustSize();
  ui->lblWrongPass->setGeometry(
        (ui->wrong_reset->width() - ui->lblWrongPass->width())/2,
        ui->lblWrongPass->geometry().y(),
        ui->lblWrongPass->width(),
        ui->lblWrongPass->height());

  ui->btnConfirmPassReset->setText(btnConfirmTxt_BG);

  //Manufacturing
  ui->label_2->setText(lblManSettingsTxt_BG);
  ui->label_2->adjustSize();
  ui->label_2->setGeometry(
        (ui->manufacturingBox->width() - ui->label_2->width())/2,
        ui->label_2->geometry().y(),
        ui->label_2->width(),
        ui->label_2->height());

  ui->label_7->setText(lblInsertTxt_BG);
  ui->label_7->adjustSize();
  ui->label_7->setGeometry(
        (ui->grBoxPass->width() - ui->label_7->width())/2,
        ui->label_7->geometry().y(),
        ui->label_7->width(),
        ui->label_7->height());

  ui->label_8->setText(lblWrongPassTxt_BG);
  ui->label_8->adjustSize();
  ui->label_8->setGeometry(
        (ui->wrong->width() - ui->label_8->width())/2,
        ui->label_8->geometry().y(),
        ui->label_8->width(),
        ui->label_8->height());

  ui->m_confirmPass->setText(btnConfirmTxt_BG);
  ui->brightness_lbl->setText(lblBrightnessTxt_BG);
  ui->contrast_lbl->setText(lblContrastTxt_BG);
  ui->manufacturing->setItemText(0, tabDayCameraTxt_BG);
  ui->manufacturing->setItemText(1, tabBoresightTxt_BG);
  ui->manufacturing->setItemText(2, tabMediaTxt_BG);
}

void Menu::switchToEN()
{
  flgBG_m = false;

  //Settings
  ui->lblSettings->setText(lblSettingsTxt_EN);
  ui->lblSettings->adjustSize();
  ui->lblSettings->setGeometry(
        (ui->settingsBox->width() - ui->lblSettings->width())/2,
        ui->lblSettings->geometry().y(),
        ui->lblSettings->width(),
        ui->lblSettings->height());

  ui->lblCurrPass->setText(lblCurrPassTxt_EN);
  ui->lblNewPass->setText(lblNewPassTxt_EN);
  ui->lblConfPass->setText(lblConfPassTxt_EN);
  ui->btnConfirmPass->setText(btnConfirmTxt_EN);

  ui->lblChooseLang->setText(lblChooseLangTxt_EN);
  ui->lblChooseLang->adjustSize();
  ui->lblChooseLang->setGeometry(
        (ui->settings->width() - ui->lblChooseLang->width())/2,
        ui->lblChooseLang->geometry().y(),
        ui->lblChooseLang->width(),
        ui->lblChooseLang->height());

  ui->btnChooseLang->setText(btnChooseTxt_EN);
  ui->btnConfirmDate->setText(btnConfirmTxt_EN);
  ui->k_del_magneticDeclination->setText(btnDelTxt_EN);
  ui->lblInsert->setText(lblInsertTxt_m_EN);
  ui->btnConfirmDecl->setText(btnConfirmTxt_EN);

  ui->lblChoose->setText(lblChooseCSTxt_EN);
  ui->lblChoose->adjustSize();
  ui->lblChoose->setGeometry(
        (ui->settings->width() - ui->lblChoose->width())/2,
        ui->lblChoose->geometry().y(),
        ui->lblChoose->width(),
        ui->lblChoose->height());

  ui->btnChooseCoordSys->setText(btnChooseTxt_EN);
  ui->settings->setItemText(0, tabChangePassTxt_EN);
  ui->settings->setItemText(1, tabLanguageTxt_EN);
  ui->settings->setItemText(2, tabDateTimeTxt_EN);
  ui->settings->setItemText(3, tabMagnDeclTxt_EN);
  ui->settings->setItemText(4, tabCoordSysTxt_EN);

  ui->lblAdjustSpeed->setText(lblAdjustMovementSpeed_EN);
  ui->lblAdjustSpeed->adjustSize();
  ui->lblAdjustSpeed->setGeometry(
        (ui->settings->width() - ui->lblAdjustSpeed->width())/2,
        ui->lblAdjustSpeed->geometry().y(),
        ui->lblAdjustSpeed->width(),
        ui->lblAdjustSpeed->height());

  ui->lblCurrentSpeed->setText(lblCurrentSpeed_EN);
  ui->lblCurrentSpeed->adjustSize();
  ui->lblCurrentSpeed->setGeometry(
        (ui->settings->width() - ui->lblCurrentSpeed->width())/2,
        ui->lblCurrentSpeed->geometry().y(),
        ui->lblCurrentSpeed->width(),
        ui->lblCurrentSpeed->height());

  ui->lblInsertPassword->setText(lblInsertTxt_EN);
  ui->lblInsertPassword->adjustSize();
  ui->lblInsertPassword->setGeometry(
        (ui->grBoxReset->width() - ui->lblInsertPassword->width())/2,
        ui->lblInsertPassword->geometry().y(),
        ui->lblInsertPassword->width(),
        ui->lblInsertPassword->height());

  ui->btnConfirmPassReset->setText(btnConfirmTxt_EN);

  ui->lblWrongPass->setText(lblWrongPassTxt_EN);
  ui->lblWrongPass->adjustSize();
  ui->lblWrongPass->setGeometry(
        (ui->wrong_reset->width() - ui->lblWrongPass->width())/2,
        ui->lblWrongPass->geometry().y(),
        ui->lblWrongPass->width(),
        ui->lblWrongPass->height());

  //Manufacturing
  ui->label_2->setText(lblManSettingsTxt_EN);
  ui->label_2->adjustSize();
  ui->label_2->setGeometry(
        (ui->manufacturingBox->width() - ui->label_2->width())/2,
        ui->label_2->geometry().y(),
        ui->label_2->width(),
        ui->label_2->height());

  ui->label_7->setText(lblInsertTxt_EN);
  ui->label_7->adjustSize();
  ui->label_7->setGeometry(
        (ui->grBoxPass->width() - ui->label_7->width())/2,
        ui->label_7->geometry().y(),
        ui->label_7->width(),
        ui->label_7->height());

  ui->label_8->setText(lblWrongPassTxt_EN);
  ui->label_8->adjustSize();
  ui->label_8->setGeometry(
        (ui->wrong->width() - ui->label_8->width())/2,
        ui->label_8->geometry().y(),
        ui->label_8->width(),
        ui->label_8->height());

  ui->m_confirmPass->setText(btnConfirmTxt_EN);
  ui->brightness_lbl->setText(lblBrightnessTxt_EN);
  ui->contrast_lbl->setText(lblContrastTxt_EN);
  ui->manufacturing->setItemText(0, tabDayCameraTxt_EN);
  ui->manufacturing->setItemText(1, tabBoresightTxt_EN);
  ui->manufacturing->setItemText(2, tabMediaTxt_EN);
}

void Menu::showKeyboard()
{
  ui->keyboard->setGeometry(815, 160, 251, 291);
}

void Menu::hideKeyboard()
{
  ui->keyboard->hide();
}

void Menu::moveLeft()
{
  ui->groupBox->setGeometry(115, 40, 591, 251);
}

void Menu::moveRight()
{
  ui->groupBox->setGeometry(250, 40, 591, 251);
}

void Menu::moveLeftM()
{
  ui->grBoxPass->setGeometry(150, 100, 471, 231);
}

void Menu::moveRightM()
{
  ui->grBoxPass->setGeometry(290, 100, 471, 231);
}

void Menu::showKeyboardM()
{
  ui->keyboard->setGeometry(760, 230, 251, 291);
}

void Menu::hideKeyboardM()
{
  ui->keyboard->hide();
}

void Menu::showWrongM()
{
  ui->wrong->setGeometry(345, 140, 361, 221);
}

void Menu::hideWrongM()
{
  ui->wrong->hide();
}

void Menu::showManufacturing()
{
  ui->manufacturingBox->show();
}

void Menu::hideManufacturing()
{
  ui->manufacturingBox->hide();
}

void Menu::restoreToolBox()
{
  moveRight();
  hideKeyboard();
}

void Menu::expandToolBox()
{
  ui->keyboard->show();
  moveLeft();
  showKeyboard();
}

void Menu::restoreToolBoxM()
{
  moveRightM();
  hideKeyboardM();
}

void Menu::expandToolBoxM()
{
  moveLeftM();
  ui->keyboard->show();
  showKeyboardM();
}

void Menu::showMenu()
{
  ui->hide->setGeometry(10,10,51,51);
  ui->manufacturing->hide();
  hideWrongM();
  ui->password_grbox->show();
  restoreToolBoxM();

  menu_visible = true;
}

void Menu::hideMenu()
{
  ui->hide->setGeometry(1220,10,51,51);
  ui->m_pass->clear();
  hideWrongM();
  restoreToolBoxM();

  menu_visible = false;
}

void Menu::checkMPass()
{
  restoreToolBoxM();

  if(ui->m_pass->text() == m_password)
    {
      ui->m_pass->clear();
      ui->password_grbox->hide();
      ui->manufacturing->show();
      ui->keyboard->hide();
    }
  else
    {
      ui->m_pass->clear();
      ui->wrong->show();
      showWrongM();
    }
}

bool Menu::eventFilter(QObject *obj, QEvent *event)
{
  if(obj == ui->txtCurrPass && event->type() == QEvent::MouseButtonPress)
    {
      expandToolBox();
    }

  if(obj == ui->txtNewPass && event->type() == QEvent::MouseButtonPress)
    {
      expandToolBox();
    }

  if(obj == ui->txtConfPass && event->type() == QEvent::MouseButtonPress)
    {
      expandToolBox();
    }

  if(obj == ui->txtPassReset && event->type() == QEvent::MouseButtonPress)
    {
      ui->grBoxReset->setGeometry(120,20,551,221);
      ui->keyboard->setGeometry(800,350,251,291);
      ui->keyboard->show();
    }

  if(obj == ui->settings && event->type() == QEvent::MouseButtonPress)
    {
<<<<<<< working copy
        restoreToolBox();
        ui->grBoxReset->setGeometry(270,20,551,221);

        if(ui->settings->currentIndex() == 0)
        {
            releaseAll();
            ui->txtCurrPass->setFocus();
            txt_m = "f";
        }
        else if(ui->settings->currentIndex() == 1)
        {
            releaseAll();
           ui->btnBG->setFocus();
        }
        else if(ui->settings->currentIndex() == 2)
        {
            releaseAll();
            ui->dateEdit->setFocus();
        }
        else if(ui->settings->currentIndex() == 3)
        {
            releaseAll();
            ui->k1_magneticDeclination->setFocus();
        }
        else if(ui->settings->currentIndex() == 4)
        {
            releaseAll();
            ui->wgs->setFocus();
        }
        else if(ui->settings->currentIndex() == 5)
        {
            releaseAll();
            ui->btnPan_minus->setFocus();
        }
        else if(ui->settings->currentIndex() == 6)
        {
            releaseAll();
            ui->txtPassReset->setFocus();
            txt_m = "f";
=======
      restoreToolBox();
      ui->grBoxReset->setGeometry(270,20,551,221);
      ui->keyboard_qwerty->hide();

      if(ui->settings->currentIndex() == 0)
        {
          releaseAll();
          ui->txtCurrPass->setFocus();
          txt_m = "f";
        }
      else if(ui->settings->currentIndex() == 1)
        {
          releaseAll();
          ui->btnBG->setFocus();
        }
      else if(ui->settings->currentIndex() == 2)
        {
          releaseAll();
          ui->dateEdit->setFocus();
        }
      else if(ui->settings->currentIndex() == 3)
        {
          releaseAll();
          ui->k1_magneticDeclination->setFocus();
        }
      else if(ui->settings->currentIndex() == 4)
        {
          releaseAll();
          ui->wgs->setFocus();
        }
      else if(ui->settings->currentIndex() == 5)
        {
          releaseAll();
          ui->btn_minus->setFocus();
        }
      else if(ui->settings->currentIndex() == 6)
        {
          releaseAll();
          ui->txtPassReset->setFocus();
          txt_m = "f";
>>>>>>> merge rev
        }
    }

  if(obj == ui->manufacturingBox && event->type() == QEvent::MouseButtonPress)
    {
      restoreToolBoxM();
    }

  if(obj == ui->m_pass && event->type() == QEvent::MouseButtonPress)
    {
      expandToolBoxM();

    }
  if(obj == ui->point_name && event->type() == QEvent::MouseButtonPress)
    {
      ui->keyboard_qwerty->show();
    }
  if(obj == ui->point_att && event->type() == QEvent::MouseButtonPress)
    {
      ui->keyboard_qwerty->show();
    }
  if(obj == ui->point_latt && event->type() == QEvent::MouseButtonPress)
    {
      ui->keyboard_qwerty->show();
    }
  if(obj == ui->point_long && event->type() == QEvent::MouseButtonPress)
    {
      ui->keyboard_qwerty->show();
    }
  return QObject::eventFilter(obj, event);
}


void Menu::on_btnConfirmPass_pressed()
{
<<<<<<< working copy
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    btnConfirmPass_pressed();

    //if(ui->txtCurrPass->text() == )
    if(ui->txtCurrPass->text() == ui->txtConfPass->text())
    {
        QString newPass = ui->txtNewPass->text();
        saveuserdata->setUserPassword(newPass);
    }
=======
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  btnConfirmPass_pressed();
>>>>>>> merge rev
}


void Menu::on_btnConfirmPass_released()
{
  btnConfirmPass_released();

  ui->txtCurrPass->clear();
  ui->txtNewPass->clear();
  ui->txtConfPass->clear();
  restoreToolBox();
}


void Menu::on_btnChooseLang_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    btnChooseLang_pressed();

    if(flgBG_m == true)
=======
  btnConfirmPass_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  btnChooseLang_pressed();

  if(flgBG_m == true)
>>>>>>> merge rev
    {
<<<<<<< working copy
        switchToBG();
        flgBG_w = true;
=======
      switchToBG();
>>>>>>> merge rev
    }
  else if(flgBG_m == false)
    {
<<<<<<< working copy
        switchToEN();
        flgBG_w = false;
=======
      switchToEN();
>>>>>>> merge rev
    }
}


void Menu::on_btnChooseLang_released()
{
  btnChooseLang_released();
}


void Menu::on_btnConfirmDate_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    btnConfirmDate_pressed();

    setDateTime();
=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  btnConfirmDate_pressed();

  setDateTime();
>>>>>>> merge rev
}


void Menu::on_btnConfirmDate_released()
{
  btnConfirmDate_released();
}


void Menu::on_btnBack_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    btnReset_released();
    btnConfirmPassReset_released();

    btnBack_pressed();
    txt_m = "f";
=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  btnBack_pressed();
  txt_m = "f";
>>>>>>> merge rev
}


void Menu::on_btnBack_released()
{
<<<<<<< working copy
    btnBack_released();

    //MainWindow w;

    this->close();

    //if(flgBG_m == true)
    //{
    //    w.switchToBG();
    //}
    //else if(flgBG_m == false)
    //{
    //    w.switchToEN();
    //}
=======
  btnBack_released();

  MainWindow w;

  this->close();

  if(flgBG_m == true)
    {
      w.switchToBG();
    }
  else if(flgBG_m == false)
    {
      w.switchToEN();
    }
>>>>>>> merge rev
}


void Menu::on_btnBG_pressed()
{
  ui->btnBG->setIconSize(QSize(190, 190));
  ui->btnEN->setIconSize(QSize(220, 240));
  ui->btnChooseLang->setEnabled(true);

  flgBG_m = true;
}


void Menu::on_btnEN_pressed()
{
  ui->btnBG->setIconSize(QSize(220, 240));
  ui->btnEN->setIconSize(QSize(190, 190));
  ui->btnChooseLang->setEnabled(true);

  flgBG_m = false;
}


void Menu::on_brightness_sliderMoved(int position)
{
  QString pos = QString::number(position);
  ui->lblBrightness_value->setText(pos + "%");
}


void Menu::on_contrast_sliderMoved(int position)
{
  QString pos = QString::number(position);
  ui->lblContrast_value->setText(pos + "%");
}


void Menu::on_dde_sliderMoved(int position)
{
  QString pos = QString::number(position);
  ui->lblDDE_value->setText(pos + "%");
}


void Menu::on_k1_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k1_pressed();

    _txt = "1";
    keyboardInput();
=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k1_pressed();

  _txt = "1";
  keyboardInput();
>>>>>>> merge rev
}


void Menu::on_k1_released()
{
  k1_released();
}


void Menu::on_k2_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k2_pressed();

    _txt = "2";
    keyboardInput();
=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k2_pressed();

  _txt = "2";
  keyboardInput();
>>>>>>> merge rev
}


void Menu::on_k2_released()
{
  k2_released();
}


void Menu::on_k3_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k3_pressed();

    _txt = "3";
    keyboardInput();
=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k3_pressed();

  _txt = "3";
  keyboardInput();
>>>>>>> merge rev
}


void Menu::on_k3_released()
{
  k3_released();
}


void Menu::on_k4_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k4_pressed();

    _txt = "4";
    keyboardInput();
=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k4_pressed();

  _txt = "4";
  keyboardInput();
>>>>>>> merge rev
}


void Menu::on_k4_released()
{
  k4_released();
}


void Menu::on_k5_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k5_pressed();

    _txt = "5";
    keyboardInput();
=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k5_pressed();

  _txt = "5";
  keyboardInput();
>>>>>>> merge rev
}


void Menu::on_k5_released()
{
  k5_released();
}


void Menu::on_k6_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k6_pressed();

    _txt = "6";
    keyboardInput();
=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k6_pressed();

  _txt = "6";
  keyboardInput();
>>>>>>> merge rev
}


void Menu::on_k6_released()
{
  k6_released();
}


void Menu::on_k7_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k7_pressed();

    _txt = "7";
    keyboardInput();
=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k7_pressed();

  _txt = "7";
  keyboardInput();
>>>>>>> merge rev
}


void Menu::on_k7_released()
{
  k7_released();
}


void Menu::on_k8_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k8_pressed();

    _txt = "8";
    keyboardInput();
=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k8_pressed();

  _txt = "8";
  keyboardInput();
>>>>>>> merge rev
}


void Menu::on_k8_released()
{
  k8_released();
}


void Menu::on_k9_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k9_pressed();

    _txt = "9";
    keyboardInput();
=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k9_pressed();

  _txt = "9";
  keyboardInput();
>>>>>>> merge rev
}


void Menu::on_k9_released()
{
  k9_released();
}


void Menu::on_k0_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k0_pressed();

    _txt = "0";
    keyboardInput();
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k0_pressed();

  _txt = "0";
  keyboardInput();
}
>>>>>>> merge rev

void Menu::on_k0_released()
{
  k0_released();
}

void Menu::on_ok_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    ok_pressed();
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  ok_pressed();
}
>>>>>>> merge rev

void Menu::on_ok_released()
{
  ok_released();

  if(menu_visible == false)
    {
      restoreToolBox();
    }

  else if(menu_visible == true)
    {
      restoreToolBoxM();
    }
  ui->grBoxReset->setGeometry(270,20,551,221);
}

void Menu::on_del_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    del_pressed();

    deleteLast();
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  del_pressed();

  deleteLast();
}
>>>>>>> merge rev

void Menu::on_del_released()
{
  del_released();
}

void Menu::keyboardInput()
{
  if(ui->txtCurrPass->hasFocus())
    {
      ui->txtCurrPass->setText(ui->txtCurrPass->text() + _txt);
    }

  else if(ui->txtNewPass->hasFocus())
    {
      ui->txtNewPass->setText(ui->txtNewPass->text() + _txt);
    }

  else if(ui->txtConfPass->hasFocus())
    {
      ui->txtConfPass->setText(ui->txtConfPass->text() + _txt);
    }

  else if(ui->m_pass->hasFocus())
    {
      ui->m_pass->setText(ui->m_pass->text() + _txt);
    }
  else if(ui->txtPassReset->hasFocus())
    {
      ui->txtPassReset->setText(ui->txtPassReset->text() + _txt);
    }
}

void Menu::deleteLast()
{
  if(ui->txtCurrPass->hasFocus())
    {
      ui->txtCurrPass->backspace();
    }

  else if(ui->txtNewPass->hasFocus())
    {
      ui->txtNewPass->backspace();
    }

  else if(ui->txtConfPass->hasFocus())
    {
      ui->txtConfPass->backspace();
    }

  else if(ui->m_pass->hasFocus())
    {
      ui->m_pass->backspace();
    }
  else if(ui->txtPassReset->hasFocus())
    {
      ui->txtPassReset->backspace();
    }
}

void Menu::on_m_confirmPass_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    m_confirmPass_pressed();
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  m_confirmPass_pressed();
}
>>>>>>> merge rev

void Menu::on_m_confirmPass_released()
{
  m_confirmPass_released();

  checkMPass();
}

void Menu::on_m_ok_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    m_ok_pressed();

    //ui->wrong->hide();
    hideWrongM();
    ui->m_pass->clear();
    restoreToolBoxM();
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  m_ok_pressed();

  //ui->wrong->hide();
  hideWrongM();
  ui->m_pass->clear();
  restoreToolBoxM();
}
>>>>>>> merge rev

void Menu::on_hide_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    if(menu_visible == false)
=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  if(menu_visible == false)
>>>>>>> merge rev
    {
      showMenu();
      restoreToolBox();
      showManufacturing();
    }

  else if(menu_visible == true)
    {
      hideMenu();
      hideManufacturing();
    }
}

void Menu::on_m_back_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    m_back_pressed();
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  m_back_pressed();
}
>>>>>>> merge rev

void Menu::on_m_back_released()
{
  m_back_released();

  menu_visible = false;

  this->close();
}

void Menu::on_settings_currentChanged(int index)
{
  restoreToolBox();
  ui->grBoxReset->setGeometry(270,20,551,221);
  ui->keyboard->hide();
  ui->keyboard_qwerty->hide();
  ui->txtCurrPass->clear();
  ui->txtNewPass->clear();
  ui->txtConfPass->clear();
  ui->btnBG->setIconSize(QSize(220, 240));
  ui->btnEN->setIconSize(QSize(220, 240));

  if(index == 0)
    {
      ui->txtCurrPass->setFocus();
      releaseAll();
    }
  else if(index == 1)
    {
      ui->btnBG->setFocus();
      releaseAll();
    }
  else if(index == 2)
    {
      ui->dateEdit->setFocus();
      releaseAll();
    }
  else if(index == 3)
    {
      ui->k1_magneticDeclination->setFocus();
      releaseAll();
    }
  else if(index == 4)
    {
      ui->wgs->setFocus();
      releaseAll();
    }
  else if(index == 5)
    {
<<<<<<< working copy
        ui->btnPan_minus->setFocus();
        releaseAll();
=======
      ui->btn_minus->setFocus();
      releaseAll();
>>>>>>> merge rev
    }
  else if(index == 6)
    {
      ui->txtPassReset->setFocus();
      releaseAll();
    }

  txt_m = "f";
}

void Menu::releaseAll()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();
    btnReset_released();
    setWgsStyleSheet();
    setUtmStyleSheet();
    setKrasovskyStyleSheet();
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();
  btnReset_released();
  setWgsStyleSheet();
  setUtmStyleSheet();
  setKrasovskyStyleSheet();
}
>>>>>>> merge rev

void Menu::on_btnChooseCoordSys_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();
    setWgsStyleSheet();
    setUtmStyleSheet();
    setKrasovskyStyleSheet();

    btnChooseCoordSys_pressed();
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();
  setWgsStyleSheet();
  setUtmStyleSheet();
  setKrasovskyStyleSheet();

  btnChooseCoordSys_pressed();
}
>>>>>>> merge rev

void Menu::on_btnChooseCoordSys_released()
{
  btnChooseCoordSys_released();
}

void Menu::on_up_pressed()
{

<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    up_pressed();

    ui->reticle->move(ui->reticle->pos().x(), ui->reticle->pos().y()-10);
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  up_pressed();

  ui->reticle->move(ui->reticle->pos().x(), ui->reticle->pos().y()-10);
}
>>>>>>> merge rev

void Menu::on_up_released()
{
  up_released();
}

void Menu::on_down_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    down_pressed();

    ui->reticle->move(ui->reticle->pos().x(), ui->reticle->pos().y()+10);
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  down_pressed();

  ui->reticle->move(ui->reticle->pos().x(), ui->reticle->pos().y()+10);
}
>>>>>>> merge rev

void Menu::on_down_released()
{
  down_released();
}

void Menu::on_left_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    left_pressed();

    ui->reticle->move(ui->reticle->pos().x()-10, ui->reticle->pos().y());
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  left_pressed();

  ui->reticle->move(ui->reticle->pos().x()-10, ui->reticle->pos().y());
}
>>>>>>> merge rev

void Menu::on_left_released()
{
  left_released();
}

void Menu::on_right_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    right_pressed();

    ui->reticle->move(ui->reticle->pos().x()+10, ui->reticle->pos().y());
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  right_pressed();

  ui->reticle->move(ui->reticle->pos().x()+10, ui->reticle->pos().y());
}
>>>>>>> merge rev

void Menu::on_right_released()
{
  right_released();
}

void Menu::on_k1_magneticDeclination_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k1_magneticDeclination_pressed();

    ui->txtDeclination->setText(ui->txtDeclination->text() + "1");
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k1_magneticDeclination_pressed();

  ui->txtDeclination->setText(ui->txtDeclination->text() + "1");
}
>>>>>>> merge rev

void Menu::on_k1_magneticDeclination_released()
{
  k1_magneticDeclination_released();
}

void Menu::on_k2_magneticDeclination_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k2_magneticDeclination_pressed();

    ui->txtDeclination->setText(ui->txtDeclination->text() + "2");
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k2_magneticDeclination_pressed();

  ui->txtDeclination->setText(ui->txtDeclination->text() + "2");
}
>>>>>>> merge rev

void Menu::on_k2_magneticDeclination_released()
{
  k2_magneticDeclination_released();
}

void Menu::on_k3_magneticDeclination_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k3_magneticDeclination_pressed();

    ui->txtDeclination->setText(ui->txtDeclination->text() + "3");
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k3_magneticDeclination_pressed();

  ui->txtDeclination->setText(ui->txtDeclination->text() + "3");
}
>>>>>>> merge rev

void Menu::on_k3_magneticDeclination_released()
{
  k3_magneticDeclination_released();
}

void Menu::on_k4_magneticDeclination_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k4_magneticDeclination_pressed();

    ui->txtDeclination->setText(ui->txtDeclination->text() + "4");
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k4_magneticDeclination_pressed();

  ui->txtDeclination->setText(ui->txtDeclination->text() + "4");
}
>>>>>>> merge rev

void Menu::on_k4_magneticDeclination_released()
{
  k4_magneticDeclination_released();
}

void Menu::on_k5_magneticDeclination_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k5_magneticDeclination_pressed();

    ui->txtDeclination->setText(ui->txtDeclination->text() + "5");
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k5_magneticDeclination_pressed();

  ui->txtDeclination->setText(ui->txtDeclination->text() + "5");
}
>>>>>>> merge rev

void Menu::on_k5_magneticDeclination_released()
{
  k5_magneticDeclination_released();
}

void Menu::on_k6_magneticDeclination_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k6_magneticDeclination_pressed();

    ui->txtDeclination->setText(ui->txtDeclination->text() + "6");
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k6_magneticDeclination_pressed();

  ui->txtDeclination->setText(ui->txtDeclination->text() + "6");
}
>>>>>>> merge rev

void Menu::on_k6_magneticDeclination_released()
{
  k6_magneticDeclination_released();
}

void Menu::on_k7_magneticDeclination_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k7_magneticDeclination_pressed();

    ui->txtDeclination->setText(ui->txtDeclination->text() + "7");
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k7_magneticDeclination_pressed();

  ui->txtDeclination->setText(ui->txtDeclination->text() + "7");
}
>>>>>>> merge rev

void Menu::on_k7_magneticDeclination_released()
{
  k7_magneticDeclination_released();
}

void Menu::on_k8_magneticDeclination_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k8_magneticDeclination_pressed();

    ui->txtDeclination->setText(ui->txtDeclination->text() + "8");
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k8_magneticDeclination_pressed();

  ui->txtDeclination->setText(ui->txtDeclination->text() + "8");
}
>>>>>>> merge rev

void Menu::on_k8_magneticDeclination_released()
{
  k8_magneticDeclination_released();
}

void Menu::on_k9_magneticDeclination_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k9_magneticDeclination_pressed();

    ui->txtDeclination->setText(ui->txtDeclination->text() + "9");
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k9_magneticDeclination_pressed();

  ui->txtDeclination->setText(ui->txtDeclination->text() + "9");
}
>>>>>>> merge rev

void Menu::on_k9_magneticDeclination_released()
{
  k9_magneticDeclination_released();
}

void Menu::on_k0_magneticDeclination_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k0_magneticDeclination_pressed();

    ui->txtDeclination->setText(ui->txtDeclination->text() + "0");
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k0_magneticDeclination_pressed();

  ui->txtDeclination->setText(ui->txtDeclination->text() + "0");
}
>>>>>>> merge rev

void Menu::on_k0_magneticDeclination_released()
{
  k0_magneticDeclination_released();
}

void Menu::on_k_minus_magneticDeclination_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k_minus_magneticDeclination_pressed();

    ui->txtDeclination->setText(ui->txtDeclination->text() + "-");
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k_minus_magneticDeclination_pressed();

  ui->txtDeclination->setText(ui->txtDeclination->text() + "-");
}
>>>>>>> merge rev

void Menu::on_k_minus_magneticDeclination_released()
{
  k_minus_magneticDeclination_released();
}

void Menu::on_k_plus_magneticDeclination_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k_plus_magneticDeclination_pressed();

    ui->txtDeclination->setText(ui->txtDeclination->text() + "+");
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k_plus_magneticDeclination_pressed();

  ui->txtDeclination->setText(ui->txtDeclination->text() + "+");
}
>>>>>>> merge rev

void Menu::on_k_plus_magneticDeclination_released()
{
  k_plus_magneticDeclination_released();
}

void Menu::on_k_dot_magneticDeclination_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k_dot_magneticDeclination_pressed();

    ui->txtDeclination->setText(ui->txtDeclination->text() + ".");
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k_dot_magneticDeclination_pressed();

  ui->txtDeclination->setText(ui->txtDeclination->text() + ".");
}
>>>>>>> merge rev

void Menu::on_k_dot_magneticDeclination_released()
{
  k_dot_magneticDeclination_released();
}

void Menu::on_k_del_magneticDeclination_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    k_del_magneticDeclination_pressed();
    ui->txtDeclination->backspace();
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  k_del_magneticDeclination_pressed();
  ui->txtDeclination->backspace();
}
>>>>>>> merge rev

void Menu::on_k_del_magneticDeclination_released()
{
  k_del_magneticDeclination_released();
}

void Menu::on_btnConfirmDecl_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    btnConfirmDecl_pressed();
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  btnConfirmDecl_pressed();
}
>>>>>>> merge rev

void Menu::on_btnConfirmDecl_released()
{
  btnConfirmDecl_released();
}

void Menu::on_timeEdit_editingFinished()
{
  //currentTime = ui->timeEdit->time().toString();
}

void Menu::on_btnConfirmPassReset_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();

    btnConfirmPassReset_pressed();
=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();

  btnConfirmPassReset_pressed();
>>>>>>> merge rev
}

void Menu::on_btnConfirmPassReset_released()
{
  btnConfirmPassReset_released();

  if(ui->txtPassReset->text() == password_reset)
    {
      ui->grBoxReset->setGeometry(270,20,551,221);
      ui->grBoxReset->hide();
      ui->keyboard->hide();
      ui->btnReset->show();
      ui->txtPassReset->clear();
      ui->btnReset->setFocus();
    }
  else
    {
      ui->grBoxReset->setGeometry(270,20,551,221);
      ui->keyboard->hide();
      ui->wrong_reset->show();
      ui->ok_reset->setFocus();
      ui->txtPassReset->clear();
    }
}

void Menu::on_btnReset_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    ui->btnReset->setStyleSheet(
=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  ui->btnReset->setStyleSheet(
>>>>>>> merge rev
        "border: 2px gray; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: gray;"
        "color: black;"
        );
}

void Menu::on_btnReset_released()
{
  ui->btnReset->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: white;"
        "color: black;"
        );
}

void Menu::on_ok_reset_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    btnConfirmPassReset_released();

    ok_reset_pressed();

    ui->wrong_reset->hide();
    ui->txtPassReset->clear();
=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  btn_plus_released();
  btnConfirmPassReset_released();

  ok_reset_pressed();

  ui->wrong_reset->hide();
  ui->txtPassReset->clear();
>>>>>>> merge rev
}

void Menu::on_ok_reset_released()
{
  ok_reset_released();
}

void Menu::on_btnPan_minus_pressed()
{
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_plus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    btnPan_minus_pressed();

        pan_speed_value = ui->pan_speed->text().toLong();

    if(pan_speed_value != -100000)
    {
        pan_speed_value -= 10000;

        pan_speed_string = QString::number(pan_speed_value);
        ui->pan_speed->setText(pan_speed_string);
        ui->pan_speed->adjustSize();
        ui->pan_speed->setGeometry((ui->settings->width() - ui->pan_speed->width())/2,
                                     ui->pan_speed->geometry().y(),
                                     ui->pan_speed->width(),
                                     ui->pan_speed->height());
    }

    saveuserdata->setPanSpeed(pan_speed_value);
}

void Menu::on_btnPan_minus_released()
{
    btnPan_minus_released();
}

void Menu::on_btnPan_plus_pressed()
{
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_minus_released();
    btnTilt_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    btnPan_plus_pressed();

    pan_speed_value = ui->pan_speed->text().toLong();

    if(pan_speed_value != 100000)
    {
        pan_speed_value += 10000;

        pan_speed_string = QString::number(pan_speed_value);
        ui->pan_speed->setText(pan_speed_string);
        ui->pan_speed->adjustSize();
        ui->pan_speed->setGeometry((ui->settings->width() - ui->pan_speed->width())/2,
                                     ui->pan_speed->geometry().y(),
                                     ui->pan_speed->width(),
                                     ui->pan_speed->height());
    }

    saveuserdata->setPanSpeed(pan_speed_value);
}

void Menu::on_btnPan_plus_released()
{
    btnPan_plus_released();
}

void Menu::on_wgs_pressed()
{
    setUtmStyleSheet();
    setKrasovskyStyleSheet();
}

void Menu::on_utm_pressed()
{
    setWgsStyleSheet();
    setKrasovskyStyleSheet();
}

void Menu::on_krasovsky_pressed()
{
    setWgsStyleSheet();
    setUtmStyleSheet();
}

void Menu::on_btnConfirmDayCamSettings_pressed()
{
    ui->btnConfirmDayCamSettings->setStyleSheet(
        "border: 2px gray; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: gray;"
        "color: black;"
    );

    int brightness_value = ui->brightness->value();
    saveuserdata->setBrightnessValue(brightness_value);

    int contrast_value = ui->contrast->value();
    saveuserdata->setContrastValue(contrast_value);

    bool ddeMode;
    if(ui->dde_mode->isChecked() == true)
    {
        ddeMode = true;
    }
    else if(ui->dde_mode->isChecked() == false)
    {
        ddeMode = false;
    }
    saveuserdata->setDeeMode(ddeMode);

    if(ui->dde->isEnabled())
    {
        int dde_value = ui->dde->value();
        saveuserdata->setDeeValue(dde_value);
    }
}


void Menu::on_btnConfirmDayCamSettings_released()
{
    ui->btnConfirmDayCamSettings->setStyleSheet(
        "border: 2px white; "
        "border-radius: 10px;"
        "padding: 0 8px;"
        "background: white;"
        "color: black;"
    );
}


void Menu::on_dde_mode_stateChanged(int mode)
{
    if(mode == Qt::Checked)
    {
        ui->dde->setEnabled(true);
    }
    else if(mode == Qt::Unchecked)
    {
        ui->dde->setDisabled(true);
    }
}


void Menu::on_btnTilt_minus_pressed()
{
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_plus_released();
    btnPan_minus_released();
    btnTilt_plus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    btnTilt_minus_pressed();

    tilt_speed_value = ui->tilt_speed->text().toLong();

    if(tilt_speed_value != -100000)
    {
        tilt_speed_value -= 10000;

        tilt_speed_string = QString::number(tilt_speed_value);
        ui->tilt_speed->setText(tilt_speed_string);
        ui->tilt_speed->adjustSize();
        ui->tilt_speed->setGeometry((ui->settings->width() - ui->tilt_speed->width())/2,
                                    ui->tilt_speed->geometry().y(),
                                    ui->tilt_speed->width(),
                                    ui->tilt_speed->height());
    }

    saveuserdata->setTiltSpeed(tilt_speed_value);
}


void Menu::on_btnTilt_minus_released()
{
    btnTilt_minus_released();
}


void Menu::on_btnTilt_plus_pressed()
{
<<<<<<< working copy
    btnConfirmPass_released();
    btnChooseLang_released();
    btnConfirmDate_released();
    btnBack_released();
    m_confirmPass_released();
    m_ok_released();
    m_back_released();
    btnHide_released();
    btnChooseCoordSys_released();
    up_released();
    down_released();
    left_released();
    right_released();
    btnConfirmDecl_released();
    k1_released();
    k2_released();
    k3_released();
    k4_released();
    k5_released();
    k6_released();
    k7_released();
    k8_released();
    k9_released();
    k0_released();
    ok_released();
    del_released();
    k1_magneticDeclination_released();
    k2_magneticDeclination_released();
    k3_magneticDeclination_released();
    k4_magneticDeclination_released();
    k5_magneticDeclination_released();
    k6_magneticDeclination_released();
    k7_magneticDeclination_released();
    k8_magneticDeclination_released();
    k9_magneticDeclination_released();
    k0_magneticDeclination_released();
    k_minus_magneticDeclination_released();
    k_plus_magneticDeclination_released();
    k_dot_magneticDeclination_released();
    k_del_magneticDeclination_released();
    btnPan_plus_released();
    btnPan_minus_released();
    btnTilt_minus_released();
    ok_reset_released();
    btnConfirmPassReset_released();

    btnTilt_plus_pressed();

    tilt_speed_value = ui->tilt_speed->text().toLong();

    if(tilt_speed_value != 100000)
    {
        tilt_speed_value += 10000;

        tilt_speed_string = QString::number(tilt_speed_value);
        ui->tilt_speed->setText(tilt_speed_string);
        ui->tilt_speed->adjustSize();
        ui->tilt_speed->setGeometry((ui->settings->width() - ui->tilt_speed->width())/2,
                                     ui->tilt_speed->geometry().y(),
                                     ui->tilt_speed->width(),
                                     ui->tilt_speed->height());
    }

    saveuserdata->setTiltSpeed(tilt_speed_value);
}


void Menu::on_btnTilt_plus_released()
{
    btnTilt_plus_released();
}

void Menu::gpioBtnOk()
{
    if(ui->settings->currentIndex() == 7)
    {
        ui->settings->setCurrentIndex(0);
        ui->txtCurrPass->setFocus();
        moveLeft();
        showKeyboard();
        ui->keyboard->show();
    }
    else if(ui->btnPan_minus->hasFocus())
    {
        on_btnPan_minus_pressed();
    }
    else if(ui->btnPan_plus->hasFocus())
    {
        on_btnPan_plus_pressed();
    }
    else if(ui->btnTilt_minus->hasFocus())
    {
        on_btnTilt_minus_pressed();
    }
    else if(ui->btnTilt_plus->hasFocus())
    {
        on_btnTilt_plus_pressed();
    }
    else if(ui->k1_magneticDeclination->hasFocus())
    {
        on_k1_magneticDeclination_pressed();
    }
    else if(ui->k2_magneticDeclination->hasFocus())
    {
        on_k2_magneticDeclination_pressed();
    }
    else if(ui->k3_magneticDeclination->hasFocus())
    {
        on_k3_magneticDeclination_pressed();
    }
    else if(ui->k4_magneticDeclination->hasFocus())
    {
        on_k4_magneticDeclination_pressed();
    }
    else if(ui->k5_magneticDeclination->hasFocus())
    {
        on_k5_magneticDeclination_pressed();
    }
    else if(ui->k6_magneticDeclination->hasFocus())
    {
        on_k6_magneticDeclination_pressed();
    }
    else if(ui->k7_magneticDeclination->hasFocus())
    {
        on_k7_magneticDeclination_pressed();
    }
    else if(ui->k8_magneticDeclination->hasFocus())
    {
        on_k8_magneticDeclination_pressed();
    }
    else if(ui->k9_magneticDeclination->hasFocus())
    {
        on_k9_magneticDeclination_pressed();
    }
    else if(ui->k_minus_magneticDeclination->hasFocus())
    {
        on_k_minus_magneticDeclination_pressed();
    }
    else if(ui->k0_magneticDeclination->hasFocus())
    {
        on_k0_magneticDeclination_pressed();
    }
    else if(ui->k_plus_magneticDeclination->hasFocus())
    {
        on_k_plus_magneticDeclination_pressed();
    }
    else if(ui->k_dot_magneticDeclination->hasFocus())
    {
        on_k_dot_magneticDeclination_pressed();
    }
    else if(ui->k_del_magneticDeclination->hasFocus())
    {
        on_k_del_magneticDeclination_pressed();
    }
    else if(ui->wgs->hasFocus())
    {
        ui->wgs->setChecked(true);
    }
    else if(ui->utm->hasFocus())
    {
        ui->utm->setChecked(true);
    }
    else if(ui->krasovsky->hasFocus())
    {
        ui->krasovsky->setChecked(true);
    }
    else if(ui->settings->currentIndex() == 0)
    {
        foreach(QLineEdit* ledit, findChildren<QLineEdit*>())
        if(ledit->hasFocus())
        {
            if(txt_m == "f")
            {
                moveLeft();
                showKeyboard();
                ui->keyboard->show();
                k1_selected();
                txt_m = "1";
            }
            else if(txt_m == "1")
            {
                ledit->setText(ledit->text() + "1");
            }
            else if(txt_m == "2")
            {
                ledit->setText(ledit->text() + "2");
            }
            else if(txt_m == "3")
            {
                ledit->setText(ledit->text() + "3");
            }
            else if(txt_m == "4")
            {
                ledit->setText(ledit->text() + "4");
            }
            else if(txt_m == "5")
            {
                ledit->setText(ledit->text() + "5");
            }
            else if(txt_m == "6")
            {
                ledit->setText(ledit->text() + "6");
            }
            else if(txt_m == "7")
            {
                ledit->setText(ledit->text() + "7");
            }
            else if(txt_m == "8")
            {
                ledit->setText(ledit->text() + "8");
            }
            else if(txt_m == "9")
            {
                ledit->setText(ledit->text() + "9");
            }
            else if(txt_m == "0")
            {
                ledit->setText(ledit->text() + "0");
            }
            else if(txt_m == "del")
            {
                ledit->backspace();
            }
            else if(txt_m == "ok")
            {
                on_ok_released();
                moveRight();
                hideKeyboard();
                txt_m = "f";
            }
        }
    }
    else if(ui->txtPassReset->hasFocus())
    {
        if(txt_m == "1")
        {
            ui->txtPassReset->setText(ui->txtPassReset->text() + "1");
        }
        else if(txt_m == "2")
        {
            ui->txtPassReset->setText(ui->txtPassReset->text() + "2");
        }
        else if(txt_m == "3")
        {
            ui->txtPassReset->setText(ui->txtPassReset->text() + "3");
        }
        else if(txt_m == "4")
        {
            ui->txtPassReset->setText(ui->txtPassReset->text() + "4");
        }
        else if(txt_m == "5")
        {
            ui->txtPassReset->setText(ui->txtPassReset->text() + "5");
        }
        else if(txt_m == "6")
        {
            ui->txtPassReset->setText(ui->txtPassReset->text() + "6");
        }
        else if(txt_m == "7")
        {
            ui->txtPassReset->setText(ui->txtPassReset->text() + "7");
        }
        else if(txt_m == "8")
        {
            ui->txtPassReset->setText(ui->txtPassReset->text() + "8");
        }
        else if(txt_m == "9")
        {
            ui->txtPassReset->setText(ui->txtPassReset->text() + "9");
        }
        else if(txt_m == "0")
        {
            ui->txtPassReset->setText(ui->txtPassReset->text() + "0");
        }
        else if(txt_m == "del")
        {
            ui->txtPassReset->backspace();
        }
        else if(txt_m == "ok")
        {
            on_ok_released();
            ui->grBoxReset->setGeometry(270,20,551,221);
            hideKeyboard();
            txt_m = "f";
        }
        else if(txt_m == "f")
        {
            ui->grBoxReset->setGeometry(120,20,551,221);
            ui->keyboard->setGeometry(800,350,251,291);
            ui->keyboard->show();
            k1_selected();
            txt_m = "1";
        }
    }
    else if(ui->btnConfirmPassReset->hasFocus())
    {
       on_btnConfirmPassReset_released();

       if(ui->btnReset->hasFocus())
       {
           btnReset_pressed();
       }
    }
    else if(ui->ok_reset->hasFocus())
    {
        ui->wrong_reset->hide();
        ui->txtPassReset->setFocus();
    }
    else if(ui->btnChooseLang->hasFocus())
    {
        if(flgBG_m == true)
        {
            switchToBG();
        }
        else if(flgBG_m == false)
        {
            switchToEN();
        }
    }
    else if(ui->btnBack->hasFocus())
    {
        on_btnBack_released();
    }
}

void Menu::gpioBtnLeft()
{
    if(ui->btnEN->hasFocus())
    {
        ui->btnBG->setFocus();
        on_btnBG_pressed();
    }
    else if(ui->btnPan_plus->hasFocus())
    {
        btnPan_plus_released();
        ui->btnPan_minus->setFocus();
        btnPan_minus_pressed();
    }
    else if(ui->btnTilt_plus->hasFocus())
    {
        btnTilt_plus_released();
        ui->btnTilt_minus->setFocus();
        btnTilt_minus_pressed();
    }
    else if(ui->btnConfirmDecl->hasFocus())
    {
        btnConfirmDecl_released();
        ui->k_del_magneticDeclination->setFocus();
        k_del_magneticDeclination_selected();
    }
    else if(ui->k_del_magneticDeclination->hasFocus())
    {
        k_del_magneticDeclination_released();
        ui->k_dot_magneticDeclination->setFocus();
        k_dot_magneticDeclination_selected();
    }
    else if(ui->k_dot_magneticDeclination->hasFocus())
    {
        k_dot_magneticDeclination_released();
        ui->k_plus_magneticDeclination->setFocus();
        k_plus_magneticDeclination_selected();
    }
    else if(ui->k_plus_magneticDeclination->hasFocus())
    {
        k_plus_magneticDeclination_released();
        ui->k0_magneticDeclination->setFocus();
        k0_magneticDeclination_selected();
    }
    else if(ui->k0_magneticDeclination->hasFocus())
    {
        k0_magneticDeclination_released();
        ui->k_minus_magneticDeclination->setFocus();
        k_minus_magneticDeclination_selected();
    }
    else if(ui->k_minus_magneticDeclination->hasFocus())
    {
        k_minus_magneticDeclination_released();
        ui->k9_magneticDeclination->setFocus();
        k9_magneticDeclination_selected();
    }
    else if(ui->k9_magneticDeclination->hasFocus())
    {
        k9_magneticDeclination_released();
        ui->k8_magneticDeclination->setFocus();
        k8_magneticDeclination_selected();
    }
    else if(ui->k8_magneticDeclination->hasFocus())
    {
        k8_magneticDeclination_released();
        ui->k7_magneticDeclination->setFocus();
        k7_magneticDeclination_selected();
    }
    else if(ui->k7_magneticDeclination->hasFocus())
    {
        k7_magneticDeclination_released();
        ui->k6_magneticDeclination->setFocus();
        k6_magneticDeclination_selected();
    }
    else if(ui->k6_magneticDeclination->hasFocus())
    {
        k6_magneticDeclination_released();
        ui->k5_magneticDeclination->setFocus();
        k5_magneticDeclination_selected();
    }
    else if(ui->k5_magneticDeclination->hasFocus())
    {
        k5_magneticDeclination_released();
        ui->k4_magneticDeclination->setFocus();
        k4_magneticDeclination_selected();
    }
    else if(ui->k4_magneticDeclination->hasFocus())
    {
        k4_magneticDeclination_released();
        ui->k3_magneticDeclination->setFocus();
        k3_magneticDeclination_selected();
    }
    else if(ui->k3_magneticDeclination->hasFocus())
    {
        k3_magneticDeclination_released();
        ui->k2_magneticDeclination->setFocus();
        k2_magneticDeclination_selected();
    }
    else if(ui->k2_magneticDeclination->hasFocus())
    {
        k2_magneticDeclination_released();
        ui->k1_magneticDeclination->setFocus();
        k1_magneticDeclination_selected();
    }
    else if(ui->krasovsky->hasFocus())
    {
        setKrasovskyStyleSheet();

        ui->utm->setFocus();
        ui->utm->setStyleSheet("background:gray;");
    }
    else if(ui->utm->hasFocus())
    {
        setUtmStyleSheet();

        ui->wgs->setFocus();
        ui->wgs->setStyleSheet("background:gray;");
    }

    else if(txt_m == "del")
    {
        del_released();
        k0_selected();
        txt_m = "0";
    }
    else if(txt_m == "0")
    {
        k0_released();
        ok_selected();
        txt_m = "ok";
    }
    else if(txt_m == "ok")
    {
        ok_released();
        k9_selected();
        txt_m = "9";
    }
    else if(txt_m == "9")
    {
        k9_released();
        k8_selected();
        txt_m = "8";
    }
    else if(txt_m == "8")
    {
        k8_released();
        k7_selected();
        txt_m = "7";
    }
    else if(txt_m == "7")
    {
        k7_released();
        k6_selected();
        txt_m = "6";
    }
    else if(txt_m == "6")
    {
        k6_released();
        k5_selected();
        txt_m = "5";
    }
    else if(txt_m == "5")
    {
        k5_released();
        k4_selected();
        txt_m = "4";
    }
    else if(txt_m == "4")
    {
        k4_released();
        k3_selected();
        txt_m = "3";
    }
    else if(txt_m == "3")
    {
        k3_released();
        k2_selected();
        txt_m = "2";
    }
    else if(txt_m == "2")
    {
        k2_released();
        k1_selected();
        txt_m = "1";
    }
    //else if(txt_m == "1")
    //{
    //    k1_released();
    //    txt_m = "f";
    //}
}

void Menu::gpioBtnRight()
{
    if(ui->btnBG->hasFocus())
    {
        ui->btnEN->setFocus();
        on_btnEN_pressed();
    }
    else if(ui->btnPan_minus->hasFocus())
    {
        btnPan_minus_released();
        ui->btnPan_plus->setFocus();
        btnPan_plus_pressed();
    }
    else if(ui->btnTilt_minus->hasFocus())
    {
        btnTilt_minus_released();
        ui->btnTilt_plus->setFocus();
        btnTilt_plus_pressed();
    }
    else if(ui->k1_magneticDeclination->hasFocus())
    {
        k1_magneticDeclination_released();
        ui->k2_magneticDeclination->setFocus();
        k2_magneticDeclination_selected();
    }
    else if(ui->k2_magneticDeclination->hasFocus())
    {
        k2_magneticDeclination_released();
        ui->k3_magneticDeclination->setFocus();
        k3_magneticDeclination_selected();
    }
    else if(ui->k3_magneticDeclination->hasFocus())
    {
        k3_magneticDeclination_released();
        ui->k4_magneticDeclination->setFocus();
        k4_magneticDeclination_selected();
    }
    else if(ui->k4_magneticDeclination->hasFocus())
    {
        k4_magneticDeclination_released();
        ui->k5_magneticDeclination->setFocus();
        k5_magneticDeclination_selected();
    }
    else if(ui->k5_magneticDeclination->hasFocus())
    {
        k5_magneticDeclination_released();
        ui->k6_magneticDeclination->setFocus();
        k6_magneticDeclination_selected();
    }
    else if(ui->k6_magneticDeclination->hasFocus())
    {
        k6_magneticDeclination_released();
        ui->k7_magneticDeclination->setFocus();
        k7_magneticDeclination_selected();
    }
    else if(ui->k7_magneticDeclination->hasFocus())
    {
        k7_magneticDeclination_released();
        ui->k8_magneticDeclination->setFocus();
        k8_magneticDeclination_selected();
    }
    else if(ui->k8_magneticDeclination->hasFocus())
    {
        k8_magneticDeclination_released();
        ui->k9_magneticDeclination->setFocus();
        k9_magneticDeclination_selected();
    }
    else if(ui->k9_magneticDeclination->hasFocus())
    {
        k9_magneticDeclination_released();
        ui->k_minus_magneticDeclination->setFocus();
        k_minus_magneticDeclination_selected();
    }
    else if(ui->k_minus_magneticDeclination->hasFocus())
    {
        k_minus_magneticDeclination_released();
        ui->k0_magneticDeclination->setFocus();
        k0_magneticDeclination_selected();
    }
    else if(ui->k0_magneticDeclination->hasFocus())
    {
        k0_magneticDeclination_released();
        ui->k_plus_magneticDeclination->setFocus();
        k_plus_magneticDeclination_selected();
    }
    else if(ui->k_plus_magneticDeclination->hasFocus())
    {
        k_plus_magneticDeclination_released();
        ui->k_dot_magneticDeclination->setFocus();
        k_dot_magneticDeclination_selected();
    }
    else if(ui->k_dot_magneticDeclination->hasFocus())
    {
        k_dot_magneticDeclination_released();
        ui->k_del_magneticDeclination->setFocus();
        k_del_magneticDeclination_selected();
    }
    else if(ui->k_del_magneticDeclination->hasFocus())
    {
        k_del_magneticDeclination_released();
        ui->btnConfirmDecl->setFocus();
        btnConfirmDecl_selected();
    }
    else if(ui->wgs->hasFocus())
    {
        setWgsStyleSheet();
        ui->utm->setFocus();
        ui->utm->setStyleSheet("background:gray;");
    }
    else if(ui->utm->hasFocus())
    {
        setUtmStyleSheet();

        ui->krasovsky->setFocus();
        ui->krasovsky->setStyleSheet("background:gray;");
    }
    else if(txt_m == "1")
    {
        k1_released();
        k2_selected();
        txt_m = "2";
    }
    else if(txt_m == "2")
    {
        k2_released();
        k3_selected();
        txt_m = "3";
    }
    else if(txt_m == "3")
    {
        k3_released();
        k4_selected();
        txt_m = "4";
    }
    else if(txt_m == "4")
    {
        k4_released();
        k5_selected();
        txt_m = "5";
    }
    else if(txt_m == "5")
    {
        k5_released();
        k6_selected();
        txt_m = "6";
    }
    else if(txt_m == "6")
    {
        k6_released();
        k7_selected();
        txt_m = "7";
    }
    else if(txt_m == "7")
    {
        k7_released();
        k8_selected();
        txt_m = "8";
    }
    else if(txt_m == "8")
    {
        k8_released();
        k9_selected();
        txt_m = "9";
    }
    else if(txt_m == "9")
    {
        k9_released();
        ok_selected();
        txt_m = "ok";
    }
    else if(txt_m == "ok")
    {
        ok_released();
        k0_selected();
        txt_m = "0";
    }
    else if(txt_m == "0")
    {
        k0_released();
        del_selected();
        txt_m = "del";
    }
}

void Menu::gpioBtnUp()
{
    //if(ui->settings->currentIndex() == 7)
    //{
    //    ui->settings->setCurrentIndex(6);
    //    ui->btnConfirmPassReset->setFocus();
    //    btnConfirmPassReset_pressed();
    //}

    if(ui->btnBack->hasFocus())
    {
        btnBack_released();
        ui->settings->setCurrentIndex(6);
        ui->btnConfirmPassReset->setFocus();
        btnConfirmPassReset_selected();
    }
    else if(ui->btnConfirmPassReset->hasFocus())
    {
        btnConfirmPassReset_released();
        ui->txtPassReset->setFocus();
    }
    else if(ui->btnReset->hasFocus())
    {
        btnReset_released();
        ui->btnReset->hide();
        ui->grBoxReset->show();
        ui->settings->setCurrentIndex(5);
        ui->btnTilt_minus->setFocus();
        btnTilt_minus_pressed();
    }
    else if(ui->btnTilt_minus->hasFocus())
    {
        btnTilt_minus_released();
        ui->btnPan_minus->setFocus();
        btnPan_minus_pressed();
    }
    else if(ui->btnPan_minus->hasFocus())
    {
        btnPan_minus_released();
        ui->settings->setCurrentIndex(4);
        ui->btnChooseCoordSys->setFocus();
        btnChooseCoordSys_selected();
    }
    else if(ui->btnTilt_plus->hasFocus())
    {
        btnTilt_plus_released();
        ui->btnPan_plus->setFocus();
        btnPan_plus_pressed();
    }
    else if(ui->btnPan_plus->hasFocus())
    {
        btnPan_plus_released();
        ui->settings->setCurrentIndex(4);
        ui->btnChooseCoordSys->setFocus();
        btnChooseCoordSys_selected();
    }
    else if(ui->btnChooseCoordSys->hasFocus())
    {
        btnChooseCoordSys_released();
        ui->wgs->setFocus();
        ui->wgs->setStyleSheet("background:gray;");
    }
    else if(ui->wgs->hasFocus())
    {
        setWgsStyleSheet();

        ui->settings->setCurrentIndex(3);
        ui->btnConfirmDecl->setFocus();
        btnConfirmDecl_selected();
    }
    else if(ui->utm->hasFocus())
    {
        setUtmStyleSheet();

        ui->settings->setCurrentIndex(3);
        ui->btnConfirmDecl->setFocus();
        btnConfirmDecl_selected();
    }
    else if(ui->krasovsky->hasFocus())
    {
        setKrasovskyStyleSheet();

        ui->settings->setCurrentIndex(3);
        ui->btnConfirmDecl->setFocus();
        btnConfirmDecl_selected();
    }
    else if(ui->k_dot_magneticDeclination->hasFocus())
    {
        k_dot_magneticDeclination_released();
        ui->k_minus_magneticDeclination->setFocus();
        k_minus_magneticDeclination_selected();
    }
    else if(ui->k_minus_magneticDeclination->hasFocus())
    {
        k_minus_magneticDeclination_released();
        ui->k7_magneticDeclination->setFocus();
        k7_magneticDeclination_selected();
    }
    else if(ui->k7_magneticDeclination->hasFocus())
    {
        k7_magneticDeclination_released();
        ui->k4_magneticDeclination->setFocus();
        k4_magneticDeclination_selected();
    }
    else if(ui->k4_magneticDeclination->hasFocus())
    {
        k4_magneticDeclination_released();
        ui->k1_magneticDeclination->setFocus();
        k1_magneticDeclination_selected();
    }
    else if(ui->k_del_magneticDeclination->hasFocus())
    {
        k_del_magneticDeclination_released();
        ui->k0_magneticDeclination->setFocus();
        k0_magneticDeclination_selected();
    }
    else if(ui->k0_magneticDeclination->hasFocus())
    {
        k0_magneticDeclination_released();
        ui->k8_magneticDeclination->setFocus();
        k8_magneticDeclination_selected();
    }
    else if(ui->k8_magneticDeclination->hasFocus())
    {
        k8_magneticDeclination_released();
        ui->k5_magneticDeclination->setFocus();
        k5_magneticDeclination_selected();
    }
    else if(ui->k5_magneticDeclination->hasFocus())
    {
        k5_magneticDeclination_released();
        ui->k2_magneticDeclination->setFocus();
        k2_magneticDeclination_selected();
    }
    else if(ui->k_plus_magneticDeclination->hasFocus())
    {
        k_plus_magneticDeclination_released();
        ui->k9_magneticDeclination->setFocus();
        k9_magneticDeclination_selected();
    }
    else if(ui->k9_magneticDeclination->hasFocus())
    {
        k9_magneticDeclination_released();
        ui->k6_magneticDeclination->setFocus();
        k6_magneticDeclination_selected();
    }
    else if(ui->k6_magneticDeclination->hasFocus())
    {
        k6_magneticDeclination_released();
        ui->k3_magneticDeclination->setFocus();
        k3_magneticDeclination_selected();
    }
    else if(ui->btnConfirmDecl->hasFocus())
    {
        btnConfirmDecl_released();
        ui->settings->setCurrentIndex(2);
        ui->btnConfirmDate->setFocus();
        btnConfirmDate_selected();
    }
    else if(ui->btnConfirmDate->hasFocus())
    {
        btnConfirmDate_released();
        ui->timeEdit->setFocus();
    }
    else if(ui->timeEdit->hasFocus())
    {
        ui->dateEdit->setFocus();
    }
    else if(ui->dateEdit->hasFocus())
    {
        ui->settings->setCurrentIndex(1);
        ui->btnChooseLang->setFocus();
        btnChooseLang_selected();
    }
    else if(ui->btnChooseLang->hasFocus())
    {
        btnChooseLang_released();
        ui->btnBG->setFocus();
        on_btnBG_pressed();
    }
    else if(ui->btnBG->hasFocus() || ui->btnEN->hasFocus())
    {
        ui->settings->setCurrentIndex(0);
        ui->btnConfirmPass->setFocus();
        btnConfirmPass_selected();
    }
    else if(ui->btnConfirmPass->hasFocus())
    {
        btnConfirmPass_released();
        ui->txtConfPass->setFocus();
        moveLeft();
        showKeyboard();
        ui->keyboard->show();
    }
    else if(ui->txtConfPass->hasFocus())
    {
        ui->txtNewPass->setFocus();
        moveLeft();
        showKeyboard();
        ui->keyboard->show();
    }
    else if(ui->txtNewPass->hasFocus())
    {
        ui->txtCurrPass->setFocus();
        moveLeft();
        showKeyboard();
        ui->keyboard->show();
    }
    else if(ui->btnChooseCoordSys->hasFocus())
    {
        ui->wgs->setFocus();
        ui->wgs->setStyleSheet("background:gray;");
    }

    else if(txt_m == "f")
    {
        if(ui->btnConfirmPass->hasFocus())
        {
            btnConfirmPass_released();
            ui->txtConfPass->setFocus();
            moveLeft();
            showKeyboard();
            ui->keyboard->show();
        }
        else if(ui->txtConfPass->hasFocus())
        {
            ui->txtNewPass->setFocus();
            moveLeft();
            showKeyboard();
            ui->keyboard->show();
        }
        else if(ui->txtNewPass->hasFocus())
        {
            ui->txtCurrPass->setFocus();
            moveLeft();
            showKeyboard();
            ui->keyboard->show();
        }
        else if(ui->txtPassReset->hasFocus())
        {
            ui->grBoxReset->setGeometry(270,20,551,221);
            hideKeyboard();
            btnConfirmPassReset_released();
            ui->settings->setCurrentIndex(5);
            ui->btnTilt_minus->setFocus();
            btnTilt_minus_pressed();
        }
    }
    else if(txt_m == "del")
    {
        del_released();
        k9_selected();
        txt_m = "9";
    }
    else if(txt_m == "9")
    {
        k9_released();
        k6_selected();
        txt_m = "6";
    }
    else if(txt_m == "6")
    {
        k6_released();
        k3_selected();
        txt_m = "3";
    }
    else if(txt_m == "0")
    {
        k0_released();
        k8_selected();
        txt_m = "8";
    }
    else if(txt_m == "8")
    {
        k8_released();
        k5_selected();
        txt_m = "5";
    }
    else if(txt_m == "5")
    {
        k5_released();
        k2_selected();
        txt_m = "2";
    }
    else if(txt_m == "ok")
    {
        ok_released();
        k7_selected();
        txt_m = "7";
    }
    else if(txt_m == "7")
    {
        k7_released();
        k4_selected();
        txt_m = "4";
    }
    else if(txt_m == "4")
    {
        k4_released();
        k1_selected();
        txt_m = "1";
    }
}

void Menu::gpioBtnDown()
{
    //if(ui->settings->currentIndex() == 7)
    //{
    //    ui->btnBack->setFocus();
    //    btnBack_pressed();
    //}
    if(ui->btnConfirmPass->hasFocus())
    {
        btnConfirmPass_released();
        ui->settings->setCurrentIndex(1);
        ui->btnBG->setFocus();
        on_btnBG_pressed();
    }
    else if(ui->btnConfirmPassReset->hasFocus())
    {
        btnConfirmPassReset_released();
        ui->btnBack->setFocus();
        btnBack_selected();
    }
    else if(ui->btnReset->hasFocus())
    {
        btnReset_released();
        ui->btnReset->hide();
        ui->grBoxReset->show();
        ui->btnBack->setFocus();
        btnBack_selected();
    }
    else if(ui->btnBG->hasFocus() || ui->btnEN->hasFocus())
    {
        ui->btnChooseLang->setFocus();
        btnChooseLang_selected();
    }
    else if(ui->btnChooseLang->hasFocus())
    {
        btnChooseLang_released();
        ui->settings->setCurrentIndex(2);
        ui->dateEdit->setFocus();
    }
    else if(ui->dateEdit->hasFocus())
    {
        ui->timeEdit->setFocus();
    }
    else if(ui->timeEdit->hasFocus())
    {
        ui->btnConfirmDate->setFocus();
        btnConfirmDate_selected();
    }
    else if(ui->btnConfirmDate->hasFocus())
    {
        btnConfirmDate_released();
        ui->settings->setCurrentIndex(3);
        ui->k1_magneticDeclination->setFocus();
        k1_magneticDeclination_selected();
    }
    else if(ui->k1_magneticDeclination->hasFocus())
    {
        k1_magneticDeclination_released();
        ui->k4_magneticDeclination->setFocus();
        k4_magneticDeclination_selected();
    }
    else if(ui->k4_magneticDeclination->hasFocus())
    {
        k4_magneticDeclination_released();
        ui->k7_magneticDeclination->setFocus();
        k7_magneticDeclination_selected();
    }
    else if(ui->k7_magneticDeclination->hasFocus())
    {
        k7_magneticDeclination_released();
        ui->k_minus_magneticDeclination->setFocus();
        k_minus_magneticDeclination_selected();
    }
    else if(ui->k_minus_magneticDeclination->hasFocus())
    {
        k_minus_magneticDeclination_released();
        ui->k_dot_magneticDeclination->setFocus();
        k_dot_magneticDeclination_selected();
    }
    else if(ui->k_dot_magneticDeclination->hasFocus())
    {
        k_dot_magneticDeclination_released();
        ui->btnConfirmDecl->setFocus();
        btnConfirmDecl_selected();
    }
    else if(ui->k2_magneticDeclination->hasFocus())
    {
        k2_magneticDeclination_released();
        ui->k5_magneticDeclination->setFocus();
        k5_magneticDeclination_selected();
    }
    else if(ui->k5_magneticDeclination->hasFocus())
    {
        k5_magneticDeclination_released();
        ui->k8_magneticDeclination->setFocus();
        k8_magneticDeclination_selected();
    }
    else if(ui->k8_magneticDeclination->hasFocus())
    {
        k8_magneticDeclination_released();
        ui->k0_magneticDeclination->setFocus();
        k0_magneticDeclination_selected();
    }
    else if(ui->k0_magneticDeclination->hasFocus())
    {
        k0_magneticDeclination_released();
        ui->k_del_magneticDeclination->setFocus();
        k_del_magneticDeclination_selected();
    }
    else if(ui->k3_magneticDeclination->hasFocus())
    {
        k3_magneticDeclination_released();
        ui->k6_magneticDeclination->setFocus();
        k6_magneticDeclination_selected();
    }
    else if(ui->k6_magneticDeclination->hasFocus())
    {
        k6_magneticDeclination_released();
        ui->k9_magneticDeclination->setFocus();
        k9_magneticDeclination_selected();
    }
    else if(ui->k9_magneticDeclination->hasFocus())
    {
        k9_magneticDeclination_released();
        ui->k_plus_magneticDeclination->setFocus();
        k_plus_magneticDeclination_selected();
    }
    else if(ui->k_plus_magneticDeclination->hasFocus())
    {
        k_plus_magneticDeclination_released();
        ui->k_del_magneticDeclination->setFocus();
        k_del_magneticDeclination_selected();
    }
    else if(ui->k_del_magneticDeclination->hasFocus())
    {
        k_del_magneticDeclination_released();
        ui->btnConfirmDecl->setFocus();
        btnConfirmDecl_selected();
    }
    else if(ui->btnConfirmDecl->hasFocus())
    {
        btnConfirmDecl_released();
        ui->settings->setCurrentIndex(4);
        ui->wgs->setFocus();
        ui->wgs->setStyleSheet("background:gray;");
    }
    else if(ui->wgs->hasFocus())
    {
        setWgsStyleSheet();

        ui->btnChooseCoordSys->setFocus();
        btnChooseCoordSys_selected();
    }
    else if(ui->utm->hasFocus())
    {
        setUtmStyleSheet();

        ui->btnChooseCoordSys->setFocus();
        btnChooseCoordSys_selected();
    }
    else if(ui->krasovsky->hasFocus())
    {
        setKrasovskyStyleSheet();

        ui->btnChooseCoordSys->setFocus();
        btnChooseCoordSys_selected();
    }
    else if(ui->btnChooseCoordSys->hasFocus())
    {
        btnChooseCoordSys_released();
        ui->settings->setCurrentIndex(5);
        ui->btnPan_minus->setFocus();
        btnPan_minus_pressed();
    }
    else if(ui->btnPan_minus->hasFocus())
    {
        btnPan_minus_released();
        ui->btnTilt_minus->setFocus();
        btnTilt_minus_pressed();
    }
    else if(ui->btnTilt_minus->hasFocus())
    {
        btnTilt_minus_released();
        ui->settings->setCurrentIndex(6);
        ui->txtPassReset->setFocus();
    }
    else if(ui->btnPan_plus->hasFocus())
    {
        btnPan_plus_released();
        ui->btnTilt_plus->setFocus();
        btnTilt_plus_pressed();
    }
    else if(ui->btnTilt_plus->hasFocus())
    {
        btnTilt_plus_released();
        ui->settings->setCurrentIndex(6);
        ui->txtPassReset->setFocus();
    }
    else if(txt_m == "f")
    {
        if(ui->txtCurrPass->hasFocus())
        {
            ui->txtNewPass->setFocus();
            moveLeft();
            showKeyboard();
            ui->keyboard->show();
        }
        else if(ui->txtNewPass->hasFocus())
        {
            ui->txtConfPass->setFocus();
            moveLeft();
            showKeyboard();
            ui->keyboard->show();
        }
        else if(ui->txtConfPass->hasFocus())
        {
            ui->btnConfirmPass->setFocus();
            btnConfirmPass_selected();
            moveRight();
            hideKeyboard();
        }
        else if(ui->txtPassReset->hasFocus())
        {
            ui->grBoxReset->setGeometry(270,20,551,221);
            hideKeyboard();
            ui->btnConfirmPassReset->setFocus();
            btnConfirmPassReset_selected();
        }
    }

    else if(txt_m == "1")
    {
        k1_released();
        k4_selected();
        txt_m = "4";
    }
    else if(txt_m == "4")
    {
        k4_released();
        k7_selected();
        txt_m = "7";
    }
    else if(txt_m == "7")
    {
        k7_released();
        ok_selected();
        txt_m = "ok";
    }
    else if(txt_m == "2")
    {
        k2_released();
        k5_selected();
        txt_m = "5";
    }
    else if(txt_m == "5")
    {
        k5_released();
        k8_selected();
        txt_m = "8";
    }
    else if(txt_m == "8")
    {
        k8_released();
        k0_selected();
        txt_m = "0";
    }
    else if(txt_m == "3")
    {
        k3_released();
        k6_selected();
        txt_m = "6";
    }
    else if(txt_m == "6")
    {
        k6_released();
        k9_selected();
        txt_m = "9";
    }
    else if(txt_m == "9")
    {
        k9_released();
        del_selected();
        txt_m = "del";
    }
}

=======
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_plus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  btn_minus_pressed();

  pantilt_speed = ui->lblPT_Speed->text().toLong();

  if(pantilt_speed != 10000)
    {
      pantilt_speed -= 10000;

      _pantilt_speed = QString::number(pantilt_speed);
      ui->lblPT_Speed->setText(_pantilt_speed);
      ui->lblPT_Speed->adjustSize();
      ui->lblPT_Speed->setGeometry((ui->settings->width() - ui->lblPT_Speed->width())/2,
                                   ui->lblPT_Speed->geometry().y(),
                                   ui->lblPT_Speed->width(),
                                   ui->lblPT_Speed->height());
    }
}

void Menu::on_btn_minus_released()
{
  btn_minus_released();
}

void Menu::on_btn_plus_pressed()
{
  btnConfirmPass_released();
  btnChooseLang_released();
  btnConfirmDate_released();
  btnBack_released();
  m_confirmPass_released();
  m_ok_released();
  m_back_released();
  btnHide_released();
  btnChooseCoordSys_released();
  up_released();
  down_released();
  left_released();
  right_released();
  btnConfirmDecl_released();
  k1_released();
  k2_released();
  k3_released();
  k4_released();
  k5_released();
  k6_released();
  k7_released();
  k8_released();
  k9_released();
  k0_released();
  ok_released();
  del_released();
  k1_magneticDeclination_released();
  k2_magneticDeclination_released();
  k3_magneticDeclination_released();
  k4_magneticDeclination_released();
  k5_magneticDeclination_released();
  k6_magneticDeclination_released();
  k7_magneticDeclination_released();
  k8_magneticDeclination_released();
  k9_magneticDeclination_released();
  k0_magneticDeclination_released();
  k_minus_magneticDeclination_released();
  k_plus_magneticDeclination_released();
  k_dot_magneticDeclination_released();
  k_del_magneticDeclination_released();
  btn_minus_released();
  ok_reset_released();
  btnConfirmPassReset_released();

  btn_plus_pressed();

  pantilt_speed = ui->lblPT_Speed->text().toLong();

  if(pantilt_speed != 100000)
    {
      pantilt_speed += 10000;

      _pantilt_speed = QString::number(pantilt_speed);
      ui->lblPT_Speed->setText(_pantilt_speed);
      ui->lblPT_Speed->adjustSize();
      ui->lblPT_Speed->setGeometry((ui->settings->width() - ui->lblPT_Speed->width())/2,
                                   ui->lblPT_Speed->geometry().y(),
                                   ui->lblPT_Speed->width(),
                                   ui->lblPT_Speed->height());
    }
}

void Menu::on_btn_plus_released()
{
  btn_plus_released();
}

void Menu::on_wgs_pressed()
{
  setUtmStyleSheet();
  setKrasovskyStyleSheet();
}

void Menu::on_utm_pressed()
{
  setWgsStyleSheet();
  setKrasovskyStyleSheet();
}

void Menu::on_krasovsky_pressed()
{
  setWgsStyleSheet();
  setUtmStyleSheet();
}

void Menu::addLetter(QString value){

  if(ui->point_name->hasFocus() == true){

      ui->point_name->setText(ui->point_name->text() + value);

    } else if (ui->point_latt->hasFocus()){

      ui->point_latt->setText(ui->point_latt->text() + value);

    } else if (ui->point_long->hasFocus()){

      ui->point_long->setText(ui->point_long->text() + value);

    } else if (ui->point_att->hasFocus()) {

      ui->point_att->setText(ui->point_att->text() + value);
    }
}

void Menu::removeLetter(){
  if(ui->point_name->hasFocus()){

      ui->point_name->backspace();

    } else if (ui->point_latt->hasFocus()){

      ui->point_latt->backspace();

    } else if (ui->point_long->hasFocus()){

      ui->point_long->backspace();

    } else if (ui->point_att->hasFocus()) {

      ui->point_att->backspace();
    }
}

void Menu::on_btna_pressed()
{
  QString value;
  if(!capsLock){
      value = "a";
    } else {
      value = "A";
    }
  addLetter(value);
  setSmallLetters();
}

void Menu::on_btnb_pressed(){
  QString value;
  if(!capsLock){
      value = "b";
    } else {
      value = "B";
    }
  addLetter(value);
  setSmallLetters();
}

void Menu::on_btnc_pressed(){
  QString value;
  if(!capsLock){
      value = "c";
    } else {
      value = "C";
    }
  addLetter(value);
  setSmallLetters();
}

void Menu::on_btnd_pressed(){
  QString value;
  if(!capsLock){
      value = "d";
    } else {
      value = "D";
    }
  addLetter(value);
  setSmallLetters();
}

void Menu::on_btne_pressed(){
  QString value;
  if(!capsLock){
      value = "e";
    } else {
      value = "E";
    }
  addLetter(value);
  setSmallLetters();
}

void Menu::on_btnf_pressed(){
  QString value;
  if(!capsLock){
      value = "f";
    } else {
      value = "F";
    }
  addLetter(value);
  setSmallLetters();
}

void Menu::on_btng_pressed(){
  QString value;
  if(!capsLock){
      value = "g";
    } else {
      value = "G";
    }
  addLetter(value);
  setSmallLetters();
}

void Menu::on_btnh_pressed(){
  QString value;
  if(!capsLock){
      value = "h";
    } else {
      value = "H";
    }
  addLetter(value);
  setSmallLetters();
}
void Menu::on_btni_pressed(){
  QString value;
  if(!capsLock){
      value = "i";
    } else {
      value = "I";
    }
  addLetter(value);
  setSmallLetters();
}
void Menu::on_btnj_pressed(){
  QString value;
  if(!capsLock){
      value = "j";
    } else {
      value = "J";
    }
  addLetter(value);
  setSmallLetters();
}
void Menu::on_btnk_pressed(){
  QString value;
  if(!capsLock){
      value = "k";
    } else {
      value = "K";
    }
  addLetter(value);
  setSmallLetters();
}
void Menu::on_btnl_pressed(){
  QString value;
  if(!capsLock){
      value = "l";
    } else {
      value = "L";
    }
  addLetter(value);
  setSmallLetters();
}
void Menu::on_btnm_pressed(){
  QString value;
  if(!capsLock){
      value = "m";
    } else {
      value = "M";
    }
  addLetter(value);
  setSmallLetters();
}

void Menu::on_btnn_pressed(){
  QString value;
  if(!capsLock){
      value = "n";
    } else {
      value = "N";
    }
  addLetter(value);
  setSmallLetters();
}

void Menu::on_btno_pressed(){
  QString value;
  if(!capsLock){
      value = "o";
    } else {
      value = "O";
    }
  addLetter(value);
  setSmallLetters();
}

void Menu::on_btnp_pressed(){
  QString value;
  if(!capsLock){
      value = "p";
    } else {
      value = "P";
    }
  addLetter(value);
  setSmallLetters();
}

void Menu::on_btnq_pressed(){
  QString value;
  if(!capsLock){
      value = "q";
    } else {
      value = "Q";
    }
  addLetter(value);
  setSmallLetters();
}

void Menu::on_btnr_pressed(){
  QString value;
  if(!capsLock){
      value = "r";
    } else {
      value = "R";
    }
  addLetter(value);
  setSmallLetters();
}

void Menu::on_btns_pressed(){
  QString value;
  if(!capsLock){
      value = "s";
    } else {
      value = "S";
    }
  addLetter(value);
  setSmallLetters();
}

void Menu::on_btnt_pressed(){
  QString value;
  if(!capsLock){
      value = "t";
    } else {
      value = "T";
    }
  addLetter(value);
  setSmallLetters();
}

void Menu::on_btnu_pressed(){
  QString value;
  if(!capsLock){
      value = "u";
    } else {
      value = "U";
    }
  addLetter(value);
  setSmallLetters();
}

void Menu::on_btnv_pressed(){
  QString value;
  if(!capsLock){
      value = "v";
    } else {
      value = "V";
    }
  addLetter(value);
  setSmallLetters();
}

void Menu::on_btnw_pressed(){
  QString value;
  if(!capsLock){
      value = "w";
    } else {
      value = "W";
    }
  addLetter(value);
  setSmallLetters();
}

void Menu::on_btnx_pressed(){
  QString value;
  if(!capsLock){
      value = "x";
    } else {
      value = "X";
    }
  addLetter(value);
  setSmallLetters();
}

void Menu::on_btny_pressed(){
  QString value;
  if(!capsLock){
      value = "y";
    } else {
      value = "Y";
    }
  addLetter(value);
  setSmallLetters();
}

void Menu::on_btnz_pressed(){
  QString value;
  if(!capsLock){
      value = "z";
    } else {
      value = "Z";
    }
  addLetter(value);
  setSmallLetters();
}

void Menu::on_btn_Sym1_pressed(){
  addLetter(ui->btn_Sym1->text());
}

void Menu::on_btn_Sym2_pressed(){
  addLetter(ui->btn_Sym2->text());
}

void Menu::on_btn_Sym3_pressed(){
  addLetter(ui->btn_Sym3->text());
}

void Menu::on_btn_Sym4_pressed(){
  addLetter(ui->btn_Sym4->text());
}

void Menu::on_btn_Sym5_pressed(){
  addLetter("&");
}

void Menu::on_btn_Sym6_pressed(){
  addLetter(ui->btn_Sym6->text());
}

void Menu::on_btn_Sym7_pressed(){
  addLetter(ui->btn_Sym7->text());
}

void Menu::on_btn_Sym8_pressed(){
  addLetter(ui->btn_Sym8->text());
}

void Menu::on_btn_Sym9_pressed(){
  addLetter(ui->btn_Sym9->text());
}

void Menu::on_btn_Sym10_pressed(){
  addLetter(ui->btn_Sym10->text());
}

void Menu::on_btn_Sym11_pressed(){
  addLetter(ui->btn_Sym11->text());
}

void Menu::on_btn_Sym12_pressed(){
  addLetter(ui->btn_Sym12->text());
}

void Menu::on_btn_Sym13_pressed(){
  addLetter(ui->btn_Sym13->text());
}

void Menu::on_btn_Sym14_pressed(){
  addLetter(ui->btn_Sym14->text());
}

void Menu::on_btn_Sym15_pressed(){
  addLetter(ui->btn_Sym15->text());
}

void Menu::on_btn_Sym16_pressed(){
  addLetter(ui->btn_Sym16->text());
}

void Menu::on_btn_Sym17_pressed(){
  addLetter(ui->btn_Sym17->text());
}

void Menu::on_btn_Sym18_pressed(){
  addLetter(ui->btn_Sym18->text());
}

void Menu::on_btn_Sym19_pressed(){
  addLetter(ui->btn_Sym19->text());
}

void Menu::on_btn_Sym20_pressed(){
  addLetter(ui->btn_Sym20->text());
}

void Menu::on_btn_Sym21_pressed(){
  addLetter(ui->btn_Sym21->text());
}

void Menu::on_btn0_pressed(){
  addLetter(ui->btn_Sym21->text());
}

void Menu::on_btn00_pressed(){
  addLetter(ui->btn00->text());
}
void Menu::on_btn1_pressed(){
  addLetter(ui->btn1->text());
}

void Menu::on_btn2_pressed(){
  addLetter(ui->btn2->text());
}

void Menu::on_btn3_pressed(){
  addLetter(ui->btn3->text());
}
void Menu::on_btn4_pressed(){
  addLetter(ui->btn4->text());
}

void Menu::on_btn5_pressed(){
  addLetter(ui->btn5->text());
}

void Menu::on_btn6_pressed(){
  addLetter(ui->btn6->text());
}

void Menu::on_btn7_pressed(){
  addLetter(ui->btn7->text());
}

void Menu::on_btn8_pressed(){
  addLetter(ui->btn8->text());
}

void Menu::on_btn9_pressed(){
  addLetter(ui->btn9->text());
}

void Menu::on_btnDot_pressed(){
  addLetter(ui->btnDot->text());
}

void Menu::on_btn_Space_pressed(){
  addLetter(" ");
}

void Menu::on_btn_Enter_pressed(){
  addLetter(ui->btn_Sym21->text());
}

void Menu::setCapLetters(){
  ui->btna->setText("A");
  ui->btnb->setText("B");
  ui->btnc->setText("C");
  ui->btnd->setText("D");
  ui->btne->setText("E");
  ui->btnf->setText("F");
  ui->btng->setText("G");
  ui->btnh->setText("H");
  ui->btni->setText("I");
  ui->btnj->setText("J");
  ui->btnk->setText("K");
  ui->btnl->setText("L");
  ui->btnm->setText("M");
  ui->btnn->setText("N");
  ui->btno->setText("O");
  ui->btnp->setText("P");
  ui->btnq->setText("Q");
  ui->btnr->setText("R");
  ui->btns->setText("S");
  ui->btnt->setText("T");
  ui->btnu->setText("U");
  ui->btnv->setText("V");
  ui->btnw->setText("W");
  ui->btnx ->setText("X");
  ui->btny->setText("Y");
  ui->btnz->setText("Z");

  capsLock = true;
}
void Menu::setSmallLetters(){
  ui->btna->setText("a");
  ui->btnb->setText("b");
  ui->btnc->setText("c");
  ui->btnd->setText("d");
  ui->btne->setText("e");
  ui->btnf->setText("f");
  ui->btng->setText("g");
  ui->btnh->setText("h");
  ui->btni->setText("i");
  ui->btnj->setText("j");
  ui->btnk->setText("k");
  ui->btnl->setText("l");
  ui->btnm->setText("m");
  ui->btnn->setText("n");
  ui->btno->setText("o");
  ui->btnp->setText("p");
  ui->btnq->setText("q");
  ui->btnr->setText("r");
  ui->btns->setText("s");
  ui->btnt->setText("t");
  ui->btnu->setText("u");
  ui->btnv->setText("v");
  ui->btnw->setText("w");
  ui->btnx ->setText("x");
  ui->btny->setText("y");
  ui->btnz->setText("z");

  capsLock = false;
}

void Menu::on_btn_capslock_pressed(){
  if(capsLock){
      Menu::setSmallLetters();
    } else {
      Menu::setCapLetters();
    }
}

void Menu::on_btn_backspace_pressed(){
  removeLetter();
}

void Menu::addPoints(QString name, QString lattitude, QString longitude, QString altitude){

  pointObj.setPointName(name);
  pointObj.setPointLattitude(lattitude);
  pointObj.setPointLongitude(longitude);
  pointObj.setPointAltitude(altitude);

  Menu::showDataInTableView(pointObj);

  hashPoint.insert(name, pointObj);

  savePointObj->setPoint(hashPoint);

  ui->point_name->setText("");
  ui->point_att->setText("");
  ui->point_long->setText("");
  ui->point_latt->setText("");
}

void Menu::on_pushButton_pressed(){

  ui->keyboard_qwerty->hide();

  QString name = ui->point_name->text();
  QString lat = ui->point_latt->text();
  QString lng = ui->point_long->text();
  QString alt = ui->point_att->text();

  Menu::addPoints(name, lat, lng, alt);
}

void Menu::loadPointData(){

  int indexNew = 1;
  foreach (PointObj val, hashPoint) {
      val.setPointIndex(QString::number(indexNew));
      Menu::showDataInTableView(val);
      indexNew++;
    }
}

void Menu::showDataInTableView(PointObj point){

  QStandardItem *idCol = new QStandardItem(point.getPointIndex());
  idCol->setEditable(false);
  QStandardItem *nameCol = new QStandardItem(point.getPointName());
  QStandardItem *latCol = new QStandardItem(point.getPointLattitude());
  QStandardItem *longCol = new QStandardItem(point.getPointLongitude());
  QStandardItem *atiCol = new QStandardItem(point.getPointAltitude());

  model->appendRow( QList<QStandardItem*>() << nameCol << latCol << longCol << atiCol);
}

void Menu::initTableView(){
  horizontalHeader.append("Point Name");
  horizontalHeader.append("Point Latitude");
  horizontalHeader.append("Point Longitude");
  horizontalHeader.append("Point Altitude");

  model = new QStandardItemModel();

  model->setHorizontalHeaderLabels(horizontalHeader);
  model->setVerticalHeaderLabels(verticalHeader);

  ui->point_listView->setModel(model);
  ui->point_listView->verticalHeader()->setVisible(false);
  ui->point_listView->verticalHeader()->setDefaultSectionSize(15);
  ui->point_listView->setEnabled(true);
  ui->point_listView->setShowGrid(false);
}

void Menu::on_delete_btn_clicked(){
  QItemSelection selection = ui->point_listView->selectionModel()->selection();
  QList<int> rows;
  foreach( const QModelIndex & index, selection.indexes() ) {
      rows.append( index.row() );
    }
  qSort( rows );

  int prev = -1;
  for( int i = rows.count() - 1; i >= 0; i -= 1 ) {
      int current = rows[i];
      if( current != prev ) {
          model->removeRows( current, 1 );
          prev = current;
        }
    }

  Menu::removePoint(pointForDelete);
}

void Menu::removePoint(QString name){
  hashPoint.remove(name);
  savePointObj->setPoint(hashPoint);
}

void Menu::on_point_listView_clicked(const QModelIndex &index){
    int indexRow = index.row();
    pointForDelete = index.sibling(index.row(), index.column()).data().toString();

}
>>>>>>> merge rev
